import { ExportRecordType } from '../exporter-common/base-export-service';
import { ExportUtilities } from '../exporter-common/export-utilities';
import { WorksheetDataDictionary } from './worksheet-data-dictionary';
/** @hidden */
export class WorksheetData {
    constructor(_data, options, sort, columnCount, rootKeys, indexOfLastPinnedColumn, columnWidths, owner) {
        this._data = _data;
        this.options = options;
        this.sort = sort;
        this.columnCount = columnCount;
        this.rootKeys = rootKeys;
        this.indexOfLastPinnedColumn = indexOfLastPinnedColumn;
        this.columnWidths = columnWidths;
        this.owner = owner;
        this.initializeData();
    }
    get data() {
        return this._data;
    }
    get rowCount() {
        return this._rowCount;
    }
    get isEmpty() {
        return !this.rowCount || !this.columnCount;
    }
    // public get keys(): string[] {
    //     return this._keys;
    // }
    get isSpecialData() {
        return this._isSpecialData;
    }
    get dataDictionary() {
        return this._dataDictionary;
    }
    initializeData() {
        if (!this._data || this._data.length === 0) {
            return;
        }
        if (this._data[0].type === ExportRecordType.HierarchicalGridRecord) {
            this.options.exportAsTable = false;
        }
        this._isSpecialData = ExportUtilities.isSpecialData(this._data[0].data);
        this._rowCount = this._data.length + 1;
        this._dataDictionary = new WorksheetDataDictionary(this.columnCount, this.options.columnWidth, this.columnWidths);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid29ya3NoZWV0LWRhdGEuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9pZ25pdGV1aS1hbmd1bGFyL3NyYy9saWIvc2VydmljZXMvZXhjZWwvd29ya3NoZWV0LWRhdGEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGdCQUFnQixFQUE4QixNQUFNLHdDQUF3QyxDQUFDO0FBQ3RHLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxxQ0FBcUMsQ0FBQztBQUV0RSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUV0RSxjQUFjO0FBQ2QsTUFBTSxPQUFPLGFBQWE7SUFLdEIsWUFBb0IsS0FBc0IsRUFDdkIsT0FBZ0MsRUFDaEMsSUFBUyxFQUNULFdBQW1CLEVBQ25CLFFBQWtCLEVBQ2xCLHVCQUErQixFQUMvQixZQUFzQixFQUN0QixLQUFrQjtRQVBqQixVQUFLLEdBQUwsS0FBSyxDQUFpQjtRQUN2QixZQUFPLEdBQVAsT0FBTyxDQUF5QjtRQUNoQyxTQUFJLEdBQUosSUFBSSxDQUFLO1FBQ1QsZ0JBQVcsR0FBWCxXQUFXLENBQVE7UUFDbkIsYUFBUSxHQUFSLFFBQVEsQ0FBVTtRQUNsQiw0QkFBdUIsR0FBdkIsdUJBQXVCLENBQVE7UUFDL0IsaUJBQVksR0FBWixZQUFZLENBQVU7UUFDdEIsVUFBSyxHQUFMLEtBQUssQ0FBYTtRQUM3QixJQUFJLENBQUMsY0FBYyxFQUFFLENBQUM7SUFDOUIsQ0FBQztJQUVELElBQVcsSUFBSTtRQUNYLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQztJQUN0QixDQUFDO0lBRUQsSUFBVyxRQUFRO1FBQ2YsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDO0lBQzFCLENBQUM7SUFFRCxJQUFXLE9BQU87UUFDZCxPQUFPLENBQUMsSUFBSSxDQUFDLFFBQVEsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUM7SUFDL0MsQ0FBQztJQUVELGdDQUFnQztJQUNoQyx5QkFBeUI7SUFDekIsSUFBSTtJQUVKLElBQVcsYUFBYTtRQUNwQixPQUFPLElBQUksQ0FBQyxjQUFjLENBQUM7SUFDL0IsQ0FBQztJQUVELElBQVcsY0FBYztRQUNyQixPQUFPLElBQUksQ0FBQyxlQUFlLENBQUM7SUFDaEMsQ0FBQztJQUVPLGNBQWM7UUFDbEIsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO1lBQ3hDLE9BQU87U0FDVjtRQUVELElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLEtBQUssZ0JBQWdCLENBQUMsc0JBQXNCLEVBQUU7WUFDaEUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLEdBQUcsS0FBSyxDQUFDO1NBQ3RDO1FBRUQsSUFBSSxDQUFDLGNBQWMsR0FBRyxlQUFlLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDeEUsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7UUFDdkMsSUFBSSxDQUFDLGVBQWUsR0FBRyxJQUFJLHVCQUF1QixDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxXQUFXLEVBQUUsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDO0lBQ3RILENBQUM7Q0FDSiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV4cG9ydFJlY29yZFR5cGUsIElDb2x1bW5MaXN0LCBJRXhwb3J0UmVjb3JkIH0gZnJvbSAnLi4vZXhwb3J0ZXItY29tbW9uL2Jhc2UtZXhwb3J0LXNlcnZpY2UnO1xuaW1wb3J0IHsgRXhwb3J0VXRpbGl0aWVzIH0gZnJvbSAnLi4vZXhwb3J0ZXItY29tbW9uL2V4cG9ydC11dGlsaXRpZXMnO1xuaW1wb3J0IHsgSWd4RXhjZWxFeHBvcnRlck9wdGlvbnMgfSBmcm9tICcuL2V4Y2VsLWV4cG9ydGVyLW9wdGlvbnMnO1xuaW1wb3J0IHsgV29ya3NoZWV0RGF0YURpY3Rpb25hcnkgfSBmcm9tICcuL3dvcmtzaGVldC1kYXRhLWRpY3Rpb25hcnknO1xuXG4vKiogQGhpZGRlbiAqL1xuZXhwb3J0IGNsYXNzIFdvcmtzaGVldERhdGEge1xuICAgIHByaXZhdGUgX3Jvd0NvdW50OiBudW1iZXI7XG4gICAgcHJpdmF0ZSBfZGF0YURpY3Rpb25hcnk6IFdvcmtzaGVldERhdGFEaWN0aW9uYXJ5O1xuICAgIHByaXZhdGUgX2lzU3BlY2lhbERhdGE6IGJvb2xlYW47XG5cbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIF9kYXRhOiBJRXhwb3J0UmVjb3JkW10sXG4gICAgICAgICAgICAgICAgcHVibGljIG9wdGlvbnM6IElneEV4Y2VsRXhwb3J0ZXJPcHRpb25zLFxuICAgICAgICAgICAgICAgIHB1YmxpYyBzb3J0OiBhbnksXG4gICAgICAgICAgICAgICAgcHVibGljIGNvbHVtbkNvdW50OiBudW1iZXIsXG4gICAgICAgICAgICAgICAgcHVibGljIHJvb3RLZXlzOiBzdHJpbmdbXSxcbiAgICAgICAgICAgICAgICBwdWJsaWMgaW5kZXhPZkxhc3RQaW5uZWRDb2x1bW46IG51bWJlcixcbiAgICAgICAgICAgICAgICBwdWJsaWMgY29sdW1uV2lkdGhzOiBudW1iZXJbXSxcbiAgICAgICAgICAgICAgICBwdWJsaWMgb3duZXI6IElDb2x1bW5MaXN0KSB7XG4gICAgICAgICAgICB0aGlzLmluaXRpYWxpemVEYXRhKCk7XG4gICAgfVxuXG4gICAgcHVibGljIGdldCBkYXRhKCk6IElFeHBvcnRSZWNvcmRbXSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9kYXRhO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXQgcm93Q291bnQoKTogbnVtYmVyIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3Jvd0NvdW50O1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXQgaXNFbXB0eSgpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuICF0aGlzLnJvd0NvdW50IHx8ICF0aGlzLmNvbHVtbkNvdW50O1xuICAgIH1cblxuICAgIC8vIHB1YmxpYyBnZXQga2V5cygpOiBzdHJpbmdbXSB7XG4gICAgLy8gICAgIHJldHVybiB0aGlzLl9rZXlzO1xuICAgIC8vIH1cblxuICAgIHB1YmxpYyBnZXQgaXNTcGVjaWFsRGF0YSgpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2lzU3BlY2lhbERhdGE7XG4gICAgfVxuXG4gICAgcHVibGljIGdldCBkYXRhRGljdGlvbmFyeSgpOiBXb3Jrc2hlZXREYXRhRGljdGlvbmFyeSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9kYXRhRGljdGlvbmFyeTtcbiAgICB9XG5cbiAgICBwcml2YXRlIGluaXRpYWxpemVEYXRhKCkge1xuICAgICAgICBpZiAoIXRoaXMuX2RhdGEgfHwgdGhpcy5fZGF0YS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0aGlzLl9kYXRhWzBdLnR5cGUgPT09IEV4cG9ydFJlY29yZFR5cGUuSGllcmFyY2hpY2FsR3JpZFJlY29yZCkge1xuICAgICAgICAgICAgdGhpcy5vcHRpb25zLmV4cG9ydEFzVGFibGUgPSBmYWxzZTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuX2lzU3BlY2lhbERhdGEgPSBFeHBvcnRVdGlsaXRpZXMuaXNTcGVjaWFsRGF0YSh0aGlzLl9kYXRhWzBdLmRhdGEpO1xuICAgICAgICB0aGlzLl9yb3dDb3VudCA9IHRoaXMuX2RhdGEubGVuZ3RoICsgMTtcbiAgICAgICAgdGhpcy5fZGF0YURpY3Rpb25hcnkgPSBuZXcgV29ya3NoZWV0RGF0YURpY3Rpb25hcnkodGhpcy5jb2x1bW5Db3VudCwgdGhpcy5vcHRpb25zLmNvbHVtbldpZHRoLCB0aGlzLmNvbHVtbldpZHRocyk7XG4gICAgfVxufVxuIl19