{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/user/OneDrive/\\u05DE\\u05E1\\u05DE\\u05DB\\u05D9\\u05DD/fullstack/ANGULAR/SECONDRESTORE/Front/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { CredentialsModel } from 'src/app/models/credentials.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/auth.service\";\nimport * as i2 from \"src/app/services/notify.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/icon\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/input\";\nimport * as i9 from \"@angular/material/button\";\n\nfunction LoginComponent_div_0_mat_error_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Missing email\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_div_0_mat_error_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Must be valid email address.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_div_0_mat_error_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Missing password\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"h3\");\n    i0.ɵɵelementStart(2, \"mat-icon\");\n    i0.ɵɵtext(3, \"login\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \" Sign in \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"form\", 1);\n    i0.ɵɵlistener(\"submit\", function LoginComponent_div_0_Template_form_submit_5_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.login();\n    });\n    i0.ɵɵelementStart(6, \"mat-form-field\", 2);\n    i0.ɵɵelementStart(7, \"mat-label\");\n    i0.ɵɵtext(8, \"Email: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"input\", 3, 4);\n    i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_div_0_Template_input_ngModelChange_9_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.credentials.email = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(11, LoginComponent_div_0_mat_error_11_Template, 2, 0, \"mat-error\", 0);\n    i0.ɵɵtemplate(12, LoginComponent_div_0_mat_error_12_Template, 2, 0, \"mat-error\", 0);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"mat-form-field\", 2);\n    i0.ɵɵelementStart(14, \"mat-label\");\n    i0.ɵɵtext(15, \"Password: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"input\", 5, 6);\n    i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_div_0_Template_input_ngModelChange_16_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.credentials.password = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(18, LoginComponent_div_0_mat_error_18_Template, 2, 0, \"mat-error\", 0);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(19, \"br\");\n    i0.ɵɵelementStart(20, \"button\", 7);\n    i0.ɵɵelementStart(21, \"mat-icon\");\n    i0.ɵɵtext(22, \"send\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(23, \" Login \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function LoginComponent_div_0_Template_button_click_24_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.reg();\n    });\n    i0.ɵɵelementStart(25, \"mat-icon\");\n    i0.ɵɵtext(26, \"forward\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(27, \" Sign up \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r1 = i0.ɵɵreference(10);\n\n    const _r4 = i0.ɵɵreference(17);\n\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.credentials.email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", _r1.errors == null ? null : _r1.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r1.errors == null ? null : _r1.errors.email);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.credentials.password);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", _r4.errors == null ? null : _r4.errors.required);\n  }\n}\n\nexport class LoginComponent {\n  constructor(myAuthService, notify, myRouter) {\n    this.myAuthService = myAuthService;\n    this.notify = notify;\n    this.myRouter = myRouter;\n    this.credentials = new CredentialsModel();\n  }\n\n  ngOnInit() {// alert(this.user);\n  }\n\n  login() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      // this.log = true;\n      try {\n        const user = yield _this.myAuthService.login(_this.credentials);\n\n        if (user.isAdmin) {\n          _this.notify.success(\"Hello admin!\");\n\n          _this.myRouter.navigateByUrl(\"/admin\");\n        } else {\n          _this.notify.success(\"You are logged-in :-)\");\n\n          _this.myRouter.navigateByUrl(\"/home\");\n        }\n      } catch (err) {\n        _this.notify.error(err);\n      }\n    })();\n  }\n\n  reg() {\n    this.myRouter.navigateByUrl(\"/register\");\n  }\n\n}\n\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.NotifyService), i0.ɵɵdirectiveInject(i3.Router));\n};\n\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  inputs: {\n    user: \"user\"\n  },\n  decls: 1,\n  vars: 1,\n  consts: [[4, \"ngIf\"], [3, \"submit\"], [\"floatLabel\", \"always\", \"appearance\", \"outline\"], [\"matInput\", \"\", \"type\", \"email\", \"name\", \"email\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"emailBox\", \"ngModel\"], [\"matInput\", \"\", \"type\", \"password\", \"name\", \"password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"passBox\", \"ngModel\"], [\"mat-stroked-button\", \"\"], [\"mat-stroked-button\", \"\", \"type\", \"button\", 3, \"click\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, LoginComponent_div_0_Template, 28, 5, \"div\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx.user);\n    }\n  },\n  directives: [i4.NgIf, i5.MatIcon, i6.ɵNgNoValidate, i6.NgControlStatusGroup, i6.NgForm, i7.MatFormField, i7.MatLabel, i8.MatInput, i6.DefaultValueAccessor, i6.RequiredValidator, i6.NgControlStatus, i6.NgModel, i9.MatButton, i7.MatError],\n  styles: [\"form[_ngcontent-%COMP%], mat-form-field[_ngcontent-%COMP%] {\\r\\n    width: 300px;\\r\\n}\\r\\n\\r\\nbutton[_ngcontent-%COMP%] {\\r\\n    width: 50%;\\r\\n    margin-bottom: 20px;\\r\\n}\\r\\n\\r\\nh3[_ngcontent-%COMP%] {\\r\\n    text-align: center;\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2luLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksVUFBVTtJQUNWLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLGtCQUFrQjtBQUN0QiIsImZpbGUiOiJsb2dpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiZm9ybSwgbWF0LWZvcm0tZmllbGQge1xyXG4gICAgd2lkdGg6IDMwMHB4O1xyXG59XHJcblxyXG5idXR0b24ge1xyXG4gICAgd2lkdGg6IDUwJTtcclxuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbn1cclxuXHJcbmgzIHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxufSJdfQ== */\"]\n});","map":{"version":3,"sources":["C:\\Users\\user\\OneDrive\\מסמכים\\fullstack\\ANGULAR\\SECONDRESTORE\\Front\\src\\app\\components\\auth-area\\login\\login.component.ts","C:\\Users\\user\\OneDrive\\מסמכים\\fullstack\\ANGULAR\\SECONDRESTORE\\Front\\src\\app\\components\\auth-area\\login\\login.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CredentialsModel } from 'src/app/models/credentials.model';\nimport UserModel from 'src/app/models/user.model';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { NotifyService } from 'src/app/services/notify.service';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n    public credentials = new CredentialsModel();\n    // public log: boolean = false;\n\n    @Input()\n    public user: UserModel;\n    \n\n    constructor(\n        private myAuthService: AuthService,\n        private notify: NotifyService,\n        private myRouter: Router) { }\n\n    ngOnInit() {\n        // alert(this.user);\n    }\n\n    public async login() {\n        // this.log = true;\n        try {\n            const user = await this.myAuthService.login(this.credentials);\n            if (user.isAdmin) {\n                this.notify.success(\"Hello admin!\");\n                this.myRouter.navigateByUrl(\"/admin\");\n            } else {\n                this.notify.success(\"You are logged-in :-)\");\n                this.myRouter.navigateByUrl(\"/home\");\n            }\n        }\n        catch(err) {\n            this.notify.error(err);\n        }\n    }\n\n    reg() {\n        this.myRouter.navigateByUrl(\"/register\");\n    }\n}\n","<div *ngIf=\"!user\">\n<!-- <div> -->\n\n    <h3> \n        <mat-icon>login</mat-icon>\n         Sign in\n    </h3>\n\n    <form (submit)=\"login()\">\n    <!-- <form> -->\n\n        <mat-form-field floatLabel=\"always\" appearance=\"outline\">\n            <mat-label>Email: </mat-label>\n            <input matInput type=\"email\" name=\"email\" [(ngModel)]=\"credentials.email\" required #emailBox=\"ngModel\">\n            <mat-error *ngIf=\"emailBox.errors?.required\">Missing email</mat-error>\n            <mat-error *ngIf=\"emailBox.errors?.email\">Must be valid email address.</mat-error>\n            <!-- make sure it appears at the button and not up -->\n        </mat-form-field>\n\n        <mat-form-field floatLabel=\"always\" appearance=\"outline\">\n            <mat-label>Password: </mat-label>\n            <input matInput type=\"password\" name=\"password\" [(ngModel)]=\"credentials.password\" required #passBox=\"ngModel\">\n            <mat-error *ngIf=\"passBox.errors?.required\">Missing password</mat-error>\n            <!-- <mat-error *ngIf=\"passBox.errors?.pattern\">password must be 8 characters long and contain at least one letter and one number.</mat-error> -->\n\n        </mat-form-field>\n\n        <br/>\n\n        <button mat-stroked-button>\n            <mat-icon>send</mat-icon>\n            Login\n        </button>\n        <!-- <button>Login</button> -->\n        <button mat-stroked-button type=\"button\" (click)=\"reg()\" > \n            <mat-icon>forward</mat-icon>\n            Sign up\n        </button>\n\n    </form>\n\n</div>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}