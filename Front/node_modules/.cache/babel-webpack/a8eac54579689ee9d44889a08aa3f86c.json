{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/user/OneDrive/\\u05DE\\u05E1\\u05DE\\u05DB\\u05D9\\u05DD/fullstack/ANGULAR/SECONDRESTORE/Front/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport store from 'src/app/redux/store';\nlet RightComponent = class RightComponent {\n  constructor(myItemService, myCartService, myOrdersService, notify, router) {\n    this.myItemService = myItemService;\n    this.myCartService = myCartService;\n    this.myOrdersService = myOrdersService;\n    this.notify = notify;\n    this.router = router;\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.unsubscribeMe = store.subscribe(() => {\n        var _a;\n\n        _this.isAdmin = (_a = store.getState().authState.user) === null || _a === void 0 ? void 0 : _a.isAdmin;\n      });\n      _this.unsubscribeMe = store.subscribe(() => {\n        _this.user = store.getState().authState.user;\n      }); // shai says this way the loggin in user will be shown automatically\n\n      if (JSON.parse(localStorage.getItem('user'))) {\n        _this.user = store.getState().authState.user;\n      }\n\n      const uuid = _this.user.uuid;\n      console.log(\"uuid: \" + uuid); // GETS LAST ORDER\n\n      try {\n        _this.orders = yield _this.myOrdersService.getLastOrderByUser(uuid);\n      } catch (err) {\n        _this.notify.error(err);\n      } // GETS LAST CART (OPEN OR CLOSED)\n\n\n      try {\n        _this.cart = yield _this.myCartService.getLastCartByUser(uuid); // console.log(\"last cart ID\");\n        // console.log(this.cart) \n      } catch (err) {\n        _this.notify.error(err);\n      } // CHECKS IF THE LAST CART IS OPEN (no match for last order)\n\n\n      if (_this.orders[0].CartID === _this.cart[0].CartID) {\n        _this.openCart = false;\n      } else {\n        _this.openCart = true;\n      } // if there is an open cart -> get this.cart items\n\n\n      if (_this.openCart) {\n        try {\n          _this.items = yield _this.myItemService.getOpenCartItems(_this.cart[0].CartID);\n        } catch (err) {\n          _this.notify.error(err);\n        }\n      } // Total price for cart\n\n\n      if (_this.items) {\n        _this.totalCart = _this.myItemService.totalCartPerUser(_this.items);\n      }\n    })();\n  }\n\n  ngOnDestroy() {\n    this.unsubscribeMe();\n  }\n\n};\nRightComponent = __decorate([Component({\n  selector: 'app-right',\n  templateUrl: './right.component.html',\n  styleUrls: ['./right.component.css'],\n  styles: []\n})], RightComponent);\nexport { RightComponent };","map":{"version":3,"sources":["C:\\Users\\user\\OneDrive\\מסמכים\\fullstack\\ANGULAR\\SECONDRESTORE\\Front\\src\\app\\components\\layout-area\\right\\right.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Unsubscribe } from 'redux';\nimport CartModel from 'src/app/models/cart.model';\nimport OrderModel from 'src/app/models/order.model';\nimport UserModel from 'src/app/models/user.model';\nimport store from 'src/app/redux/store';\nimport { CartsService } from 'src/app/services/carts.service';\nimport { NotifyService } from 'src/app/services/notify.service';\nimport { OrderService } from 'src/app/services/order.service';\nimport { ItemService } from 'src/app/services/item.service';\nimport ItemModel from 'src/app/models/item.model';\n\n@Component({\n  selector: 'app-right',\n  templateUrl: './right.component.html',\n  styleUrls: ['./right.component.css']\n})\nexport class RightComponent implements OnInit, OnDestroy {\n  public user: UserModel;\n  public isAdmin: boolean;\n  private unsubscribeMe: Unsubscribe;\n  public items: ItemModel[];\n  public cart: CartModel[];\n  public totalCart: number;\n  public orders: OrderModel[];\n  public products: string;\n\n  public openCart: boolean;\n\n  constructor(\n    private myItemService: ItemService, \n    private myCartService: CartsService, \n    private myOrdersService: OrderService, \n    private notify: NotifyService, \n    private router: Router, \n    ) {    }\n\n\n  async ngOnInit() {\n      this.unsubscribeMe = store.subscribe(() => {\n          this.isAdmin = store.getState().authState.user?.isAdmin;\n      });\n\n      this.unsubscribeMe = store.subscribe(() => {\n          this.user = store.getState().authState.user;\n      });\n  \n      // shai says this way the loggin in user will be shown automatically\n      if (JSON.parse(localStorage.getItem('user'))) {\n          this.user = store.getState().authState.user;\n      \n      }\n\n    const uuid = this.user.uuid;\n    console.log(\"uuid: \" + uuid)\n\n    // GETS LAST ORDER\n    try {\n      this.orders = await this.myOrdersService.getLastOrderByUser(uuid);        }\n    catch (err) {\n        this.notify.error(err);\n    }\n\n    // GETS LAST CART (OPEN OR CLOSED)\n    try {\n      this.cart = await this.myCartService.getLastCartByUser(uuid);   \n      // console.log(\"last cart ID\");\n      // console.log(this.cart) \n    } catch (err) {\n        this.notify.error(err);\n    }\n\n    // CHECKS IF THE LAST CART IS OPEN (no match for last order)\n    if (this.orders[0].CartID === this.cart[0].CartID) {this.openCart = false} else {this.openCart = true}\n\n    // if there is an open cart -> get this.cart items\n    if (this.openCart) {\n      try {\n        this.items = await this.myItemService.getOpenCartItems(this.cart[0].CartID);  \n      } catch (err) {\n          this.notify.error(err);\n      }\n    }\n\n    // Total price for cart\n    if (this.items) {\n      this.totalCart = this.myItemService.totalCartPerUser(this.items);\n    }\n\n }\n  \n\n  ngOnDestroy(): void {\n      this.unsubscribeMe();\n  }\n\n \n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}