{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/user/OneDrive/\\u05DE\\u05E1\\u05DE\\u05DB\\u05D9\\u05DD/fullstack/ANGULAR/SECONDRESTORE/Front/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Subject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport ProductModel from '../models/product.model';\nimport { productAddedAction, productDeletedAction, productsDownloadedAction, productUpdatedAction } from '../redux/products-state';\nimport store from '../redux/store';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductsService {\n  constructor(http) {\n    this.http = http;\n    this.subject = new Subject();\n  } // observable function\n\n\n  adminProductUpdate(product) {\n    this.subject.next({\n      product: product\n    });\n  }\n\n  getCartObservable() {\n    return this.subject.asObservable();\n  } // Get all products: \n\n\n  getAllProducts() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (store.getState().productsState.products.length === 0) {\n        const products = yield _this.http.get(environment.productsUrl).toPromise();\n        store.dispatch(productsDownloadedAction(products));\n      }\n\n      return store.getState().productsState.products;\n    })();\n  } // Get produts per category: \n\n\n  getProductsPerCategory(id) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      if (store.getState().productsState.products.length === 0) {\n        const products = yield _this2.http.get(environment.categoriesUrl + id).toPromise();\n        store.dispatch(productsDownloadedAction(products));\n      }\n\n      const products = store.getState().productsState.products.filter(p => p.CategoryID === id);\n      return products;\n    })();\n  } // Get one product: \n\n\n  getOneProduct(id) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      if (store.getState().productsState.products.length === 0) {\n        const products = yield _this3.http.get(environment.productsUrl + id).toPromise();\n        store.dispatch(productsDownloadedAction(products));\n      }\n\n      const product = store.getState().productsState.products.find(p => p.ProductID === id);\n      return product;\n    })();\n  } // Get products per query: // lower/upper case insensitive\n\n\n  getProductsBySearch(query) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      if (store.getState().productsState.products.length === 0) {\n        const products = yield _this4.http.get(environment.productsUrl + \"search/\" + query).toPromise();\n        store.dispatch(productsDownloadedAction(products));\n      }\n\n      const product = store.getState().productsState.products.filter(p => p.ProductName.toLowerCase().includes(query.toLowerCase())); // Object.keys(o).some(k => o[k].toLowerCase().includes(string.toLowerCase())))\n\n      return product;\n    })();\n  } // Add product: \n\n\n  addProduct(product) {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      const myFormData = ProductModel.convertToFormData(product);\n      const addedProduct = yield _this5.http.post(environment.productsUrl, myFormData).toPromise();\n      store.dispatch(productAddedAction(addedProduct));\n      return addedProduct;\n    })();\n  } // Update product: \n\n\n  updateProduct(product) {\n    var _this6 = this;\n\n    return _asyncToGenerator(function* () {\n      const myFormData = ProductModel.convertToFormData(product);\n      const updatedProduct = yield _this6.http.put(environment.productsUrl + product.ProductID, myFormData).toPromise();\n      store.dispatch(productUpdatedAction(updatedProduct));\n      return updatedProduct;\n    })();\n  } // Delete product: \n\n\n  deleteProduct(id) {\n    var _this7 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this7.http.delete(environment.productsUrl + id).toPromise();\n      store.dispatch(productDeletedAction(id));\n    })();\n  }\n\n}\n\nProductsService.ɵfac = function ProductsService_Factory(t) {\n  return new (t || ProductsService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nProductsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductsService,\n  factory: ProductsService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:\\Users\\user\\OneDrive\\מסמכים\\fullstack\\ANGULAR\\SECONDRESTORE\\Front\\src\\app\\services\\products.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport ProductModel from '../models/product.model';\nimport { productAddedAction, productDeletedAction, productsDownloadedAction, productUpdatedAction } from '../redux/products-state';\nimport store from '../redux/store';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ProductsService {\n\n    private subject = new Subject<any>();\n\n    constructor(private http: HttpClient) { }\n\n    \n  // observable function\n  adminProductUpdate(product: ProductModel) {\n    this.subject.next({\n        product: product,\n    });\n  }\n\n  getCartObservable(): Observable<any> {\n    return this.subject.asObservable();\n  }\n\n    // Get all products: \n    public async getAllProducts() {\n        if (store.getState().productsState.products.length === 0) {\n            const products = await this.http.get<ProductModel[]>(environment.productsUrl).toPromise();\n            store.dispatch(productsDownloadedAction(products));\n        }\n        return store.getState().productsState.products;\n    }\n\n    // Get produts per category: \n    public async getProductsPerCategory(id: number) {\n        if (store.getState().productsState.products.length === 0) {\n            const products = await this.http.get<ProductModel[]>(environment.categoriesUrl + id).toPromise();\n            store.dispatch(productsDownloadedAction(products));\n        }\n        const products = store.getState().productsState.products.filter(p => p.CategoryID === id);\n        return products;\n    }\n\n    // Get one product: \n    public async getOneProduct(id: number) {\n        if (store.getState().productsState.products.length === 0) {\n            const products = await this.http.get<ProductModel[]>(environment.productsUrl + id).toPromise();\n            store.dispatch(productsDownloadedAction(products));\n        }\n        const product = store.getState().productsState.products.find(p => p.ProductID === id);\n        return product;\n    }\n\n    // Get products per query: // lower/upper case insensitive\n    public async getProductsBySearch(query: string) {\n        if (store.getState().productsState.products.length === 0) {\n            const products = await this.http.get<ProductModel[]>(environment.productsUrl + \"search/\" + query).toPromise();\n            store.dispatch(productsDownloadedAction(products));\n        }\n        const product = store.getState().productsState.products.filter(p => p.ProductName.toLowerCase().includes(query.toLowerCase()));\n        // Object.keys(o).some(k => o[k].toLowerCase().includes(string.toLowerCase())))\n        return product;\n    }\n\n    // Add product: \n    public async addProduct(product: ProductModel) {\n        const myFormData: FormData = ProductModel.convertToFormData(product);\n        const addedProduct = await this.http.post<ProductModel>(environment.productsUrl, myFormData).toPromise();\n        store.dispatch(productAddedAction(addedProduct));\n        return addedProduct;\n    }\n\n    // Update product: \n    public async updateProduct(product: ProductModel) {\n        const myFormData: FormData = ProductModel.convertToFormData(product);\n        const updatedProduct = await this.http.put<ProductModel>(environment.productsUrl + product.ProductID, myFormData).toPromise();\n        store.dispatch(productUpdatedAction(updatedProduct));\n        return updatedProduct;\n    }\n\n    // Delete product: \n    public async deleteProduct(id: number) {\n        await this.http.delete(environment.productsUrl + id).toPromise();\n        store.dispatch(productDeletedAction(id));\n    }\n\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}