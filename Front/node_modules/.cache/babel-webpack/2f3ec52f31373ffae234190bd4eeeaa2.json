{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/user/OneDrive/\\u05DE\\u05E1\\u05DE\\u05DB\\u05D9\\u05DD/fullstack/ANGULAR/SECONDRESTORE/Front/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { UserModel } from 'src/app/models/user.model'; // @NgModule({\n//     //..your other property,\n//        schemas: [CUSTOM_ELEMENTS_SCHEMA]\n//      })\n\nlet RegisterComponent = class RegisterComponent {\n  constructor(myAuthService, myUserService, myCityService, notify, myRouter) {\n    this.myAuthService = myAuthService;\n    this.myUserService = myUserService;\n    this.myCityService = myCityService;\n    this.notify = notify;\n    this.myRouter = myRouter;\n    this.user = new UserModel();\n    this.step = false;\n    this.idExists = false;\n    this.emailExists = false;\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        _this.users = yield _this.myUserService.getAllidcardsEmails();\n      } catch (err) {\n        _this.notify.error(err);\n      }\n\n      try {\n        _this.cities = yield _this.myCityService.getAllCities();\n      } catch (err) {\n        _this.notify.error(err);\n      }\n    })();\n  }\n\n  register() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        yield _this2.myAuthService.register(_this2.user);\n\n        _this2.notify.success(\"You are registered :-)\");\n\n        _this2.myRouter.navigateByUrl(\"/home\");\n      } catch (err) {\n        // לבטל את זה,כי כל ההודעות הן בתחתית\n        _this2.notify.error(err);\n      }\n    })();\n  }\n\n  checkEmail() {\n    this.emailExists = false;\n    this.emailMatch = this.users.findIndex(item => item.email === this.user.email);\n\n    if (this.emailMatch >= 0) {\n      this.emailExists = true;\n    }\n  }\n\n  checkId() {\n    this.idExists = false;\n    this.idMatch = this.users.findIndex(item => item.idcard === this.user.idcard);\n\n    if (this.idMatch >= 0) {\n      this.idExists = true;\n    }\n  }\n\n  continue() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        // this.idExists = false;\n        // this.emailExists = false;\n        // this.users = await this.myUserService.getAllidcardsEmails();\n        // this.idMatch = this.users.findIndex(item => item.idcard === this.user.idcard)\n        // this.emailMatch = this.users.findIndex(item => item.email === this.user.email)\n        if (_this3.idMatch < 0 && _this3.emailMatch < 0) {\n          _this3.step = true;\n        } // if (this.idMatch>=0) { this.idExists = true; }\n        // if (this.emailMatch>=0) { this.emailExists = true; }\n\n      } catch (err) {\n        _this3.notify.error(err);\n      }\n    })();\n  } // onFocus() {\n  //     if (this.passExists) {this.passExists = false}\n  //     if (this.con) {this.con = false}\n  //     if (this.con2) {this.con2 = false}\n\n\n  back() {\n    this.step = false;\n  }\n\n};\nRegisterComponent = __decorate([Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css'],\n  styles: []\n})], RegisterComponent);\nexport { RegisterComponent };","map":{"version":3,"sources":["C:\\Users\\user\\OneDrive\\מסמכים\\fullstack\\ANGULAR\\SECONDRESTORE\\Front\\src\\app\\components\\auth-area\\register\\register.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport CityModel from 'src/app/models/city.model';\nimport { UserModel } from 'src/app/models/user.model';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { CityService } from 'src/app/services/city.service';\nimport { NotifyService } from 'src/app/services/notify.service';\nimport { UserService } from 'src/app/services/users.service';\n\n\n// @NgModule({\n//     //..your other property,\n//        schemas: [CUSTOM_ELEMENTS_SCHEMA]\n//      })\n\n@Component({\n    selector: 'app-register',\n    templateUrl: './register.component.html',\n    styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n\n    public user = new UserModel();\n    public step: boolean = false;\n    public idExists: boolean = false;\n    public emailExists: boolean = false;\n    public users: UserModel[];\n    private idMatch: number;\n    private emailMatch: number;\n    public cities: CityModel[];\n\n    constructor(\n        private myAuthService: AuthService,\n        private myUserService: UserService,\n        private myCityService: CityService,\n        private notify: NotifyService,\n        private myRouter: Router) { }\n\n    async ngOnInit() {\n        try {\n            this.users = await this.myUserService.getAllidcardsEmails();\n        } catch (err) {\n            this.notify.error(err);\n        }\n\n        try {\n            this.cities = await this.myCityService.getAllCities();\n        } catch (err) {\n            this.notify.error(err);\n        }        \n    }\n\n    public async register() {\n        try {\n            await this.myAuthService.register(this.user);\n            this.notify.success(\"You are registered :-)\");\n            this.myRouter.navigateByUrl(\"/home\");\n        }\n        catch(err) {\n            // לבטל את זה,כי כל ההודעות הן בתחתית\n            this.notify.error(err);\n        }\n    }\n\n    public checkEmail() {\n        this.emailExists = false;\n        this.emailMatch = this.users.findIndex(item => item.email === this.user.email);\n        if (this.emailMatch>=0) { this.emailExists = true; }\n\n    }\n\n    public checkId() {\n        this.idExists = false;\n        this.idMatch = this.users.findIndex(item => item.idcard === this.user.idcard);\n        if (this.idMatch>=0) { this.idExists = true; }\n\n    }\n\n    public async continue() {\n        try {\n            // this.idExists = false;\n            // this.emailExists = false;\n            // this.users = await this.myUserService.getAllidcardsEmails();\n            // this.idMatch = this.users.findIndex(item => item.idcard === this.user.idcard)\n            // this.emailMatch = this.users.findIndex(item => item.email === this.user.email)\n            if (this.idMatch<0 && this.emailMatch<0) { this.step = true; }\n            // if (this.idMatch>=0) { this.idExists = true; }\n            // if (this.emailMatch>=0) { this.emailExists = true; }\n        }\n        catch (err) {\n            this.notify.error(err);\n        }\n    }\n\n    // onFocus() {\n    //     if (this.passExists) {this.passExists = false}\n    //     if (this.con) {this.con = false}\n    //     if (this.con2) {this.con2 = false}\n\n    \n\n    back() {\n        this.step = false;\n    }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}