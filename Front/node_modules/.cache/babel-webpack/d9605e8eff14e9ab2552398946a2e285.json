{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/user/OneDrive/\\u05DE\\u05E1\\u05DE\\u05DB\\u05D9\\u05DD/fullstack/ANGULAR/SECONDRESTORE/Front/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport store from 'src/app/redux/store';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/services/order.service\";\nimport * as i4 from \"src/app/services/notify.service\";\nimport * as i5 from \"src/app/services/carts.service\";\nimport * as i6 from \"@angular/material/button\";\nexport class OrderSuccessDialogComponent {\n  constructor(dialogRef, myRouter, myOrdersService, notify, myCartService // @Inject(MAT_DIALOG_DATA) public data: DialogData\n  ) {\n    this.dialogRef = dialogRef;\n    this.myRouter = myRouter;\n    this.myOrdersService = myOrdersService;\n    this.notify = notify;\n    this.myCartService = myCartService;\n    this.fileDir = \"http://localhost:3030/api/orders/pdf/\";\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.unsubscribeMe = store.subscribe(() => {\n        _this.user = store.getState().authState.user;\n      }); // shai says this way the loggin in user will be shown automatically\n\n      if (JSON.parse(localStorage.getItem('user'))) {\n        _this.user = store.getState().authState.user;\n      }\n\n      const uuid = _this.user.uuid; // GETS LAST ORDER\n\n      try {\n        _this.orders = yield _this.myOrdersService.getLastOrderByUser(uuid);\n        _this.fileName = `Order${_this.orders[0].OrderID}.pdf`;\n      } catch (err) {\n        _this.notify.error(err);\n      }\n\n      _this.myCartService.cartUpdate(true, 0, -1); // notifies product card that cart is closed\n      // cartId = -1 --> because it's not used when cartClosed is true\n\n    })();\n  }\n\n  onNoClick() {\n    this.dialogRef.close();\n    this.myRouter.navigateByUrl(\"/home\");\n  }\n\n  ngOnDestroy() {\n    this.unsubscribeMe();\n  }\n\n}\n\nOrderSuccessDialogComponent.ɵfac = function OrderSuccessDialogComponent_Factory(t) {\n  return new (t || OrderSuccessDialogComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.OrderService), i0.ɵɵdirectiveInject(i4.NotifyService), i0.ɵɵdirectiveInject(i5.CartsService));\n};\n\nOrderSuccessDialogComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: OrderSuccessDialogComponent,\n  selectors: [[\"app-order-success-dialog\"]],\n  decls: 9,\n  vars: 2,\n  consts: [[\"mat-dialog-title\", \"\"], [\"mat-dialog-content\", \"\"], [3, \"href\"], [\"mat-dialog-actions\", \"\"], [\"mat-button\", \"\", 3, \"click\"]],\n  template: function OrderSuccessDialogComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h4\", 0);\n      i0.ɵɵtext(1, \"Hi, you did it! Your order is on its way to your house\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 1);\n      i0.ɵɵelementStart(3, \"p\");\n      i0.ɵɵelementStart(4, \"a\", 2);\n      i0.ɵɵtext(5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 3);\n      i0.ɵɵelementStart(7, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function OrderSuccessDialogComponent_Template_button_click_7_listener() {\n        return ctx.onNoClick();\n      });\n      i0.ɵɵtext(8, \"Got it\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"href\", ctx.fileDir + ctx.fileName, i0.ɵɵsanitizeUrl);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\" Your order no.: \", ctx.orders[0].OrderID, \" Click here to download the receipt\");\n    }\n  },\n  directives: [i1.MatDialogTitle, i1.MatDialogContent, i1.MatDialogActions, i6.MatButton],\n  styles: [\"mat-dialog-actions[_ngcontent-%COMP%] {\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\nbutton[_ngcontent-%COMP%] {\\r\\n    margin: auto;\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9yZGVyLXN1Y2Nlc3MtZGlhbG9nLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxZQUFZO0FBQ2hCIiwiZmlsZSI6Im9yZGVyLXN1Y2Nlc3MtZGlhbG9nLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtZGlhbG9nLWFjdGlvbnMge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG5idXR0b24ge1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG59Il19 */\"]\n});","map":{"version":3,"sources":["C:\\Users\\user\\OneDrive\\מסמכים\\fullstack\\ANGULAR\\SECONDRESTORE\\Front\\src\\app\\components\\order-area\\order-success-dialog\\order-success-dialog.component.ts","C:\\Users\\user\\OneDrive\\מסמכים\\fullstack\\ANGULAR\\SECONDRESTORE\\Front\\src\\app\\components\\order-area\\order-success-dialog\\order-success-dialog.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { Unsubscribe } from 'redux';\nimport OrderModel from 'src/app/models/order.model';\nimport UserModel from 'src/app/models/user.model';\nimport store from 'src/app/redux/store';\nimport { CartsService } from 'src/app/services/carts.service';\nimport { NotifyService } from 'src/app/services/notify.service';\nimport { OrderService } from 'src/app/services/order.service';\n\n@Component({\n  selector: 'app-order-success-dialog',\n  templateUrl: './order-success-dialog.component.html',\n  styleUrls: ['./order-success-dialog.component.css']\n})\nexport class OrderSuccessDialogComponent {\n\n  // public image: FileList;\n\n  public orders: OrderModel[];\n  private unsubscribeMe: Unsubscribe;\n  private user: UserModel;\n  public fileName: string;\n  public fileDir = \"http://localhost:3030/api/orders/pdf/\";\n\n  constructor(\n    public dialogRef: MatDialogRef<OrderSuccessDialogComponent>,\n    private myRouter: Router,\n    private myOrdersService: OrderService,\n    private notify: NotifyService,\n    private myCartService: CartsService\n    // @Inject(MAT_DIALOG_DATA) public data: DialogData\n    ) {}\n\n\n  async ngOnInit() {\n    this.unsubscribeMe = store.subscribe(() => {\n      this.user = store.getState().authState.user;\n  });\n\n  // shai says this way the loggin in user will be shown automatically\n  if (JSON.parse(localStorage.getItem('user'))) {\n      this.user = store.getState().authState.user;\n  }\n\n  const uuid = this.user.uuid;\n     // GETS LAST ORDER\n     try {\n      this.orders = await this.myOrdersService.getLastOrderByUser(uuid);       \n      this.fileName = `Order${this.orders[0].OrderID}.pdf`\n    } catch (err) {\n        this.notify.error(err);\n    }\n\n    this.myCartService.cartUpdate(true, 0, -1); // notifies product card that cart is closed\n    // cartId = -1 --> because it's not used when cartClosed is true\n  }\n  \n  onNoClick(): void {\n    this.dialogRef.close();\n    this.myRouter.navigateByUrl(\"/home\");\n\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribeMe();\n  }\n\n\n}\n","<h4 mat-dialog-title>Hi, you did it! Your order is on its way to your house</h4>\n<div mat-dialog-content>\n  <p><a [href]=\"fileDir + fileName\">\n    Your order no.: {{orders[0].OrderID}}\n    Click here to download the receipt</a></p>\n</div>\n<div mat-dialog-actions>\n  <button mat-button (click)=\"onNoClick()\">Got it</button>\n</div>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}