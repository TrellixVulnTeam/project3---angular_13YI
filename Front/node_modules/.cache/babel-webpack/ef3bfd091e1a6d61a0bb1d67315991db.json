{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/user/OneDrive/\\u05DE\\u05E1\\u05DE\\u05DB\\u05D9\\u05DD/fullstack/ANGULAR/SECONDRESTORE/Front/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport store from 'src/app/redux/store'; // import { UnitsDialogComponent } from '../units-dialog/units-dialog.component';\n\nlet OrderSuccessDialogComponent = class OrderSuccessDialogComponent {\n  constructor(dialogRef, myRouter, myOrdersService, notify, myCartService // @Inject(MAT_DIALOG_DATA) public data: DialogData\n  ) {\n    this.dialogRef = dialogRef;\n    this.myRouter = myRouter;\n    this.myOrdersService = myOrdersService;\n    this.notify = notify;\n    this.myCartService = myCartService;\n    this.fileDir = \"http://localhost:3030/api/orders/pdf/\";\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.unsubscribeMe = store.subscribe(() => {\n        _this.user = store.getState().authState.user;\n      }); // shai says this way the loggin in user will be shown automatically\n\n      if (JSON.parse(localStorage.getItem('user'))) {\n        _this.user = store.getState().authState.user;\n      }\n\n      const uuid = _this.user.UserUUID; // GETS LAST ORDER\n\n      try {\n        _this.orders = yield _this.myOrdersService.getLastOrderByUser(uuid);\n        _this.fileName = `Order${_this.orders[0].OrderID}.pdf`;\n      } catch (err) {\n        _this.notify.error(err);\n      }\n\n      _this.myCartService.cartUpdate(true, 0, -1); // notifies product card that cart is closed\n      // cartId = -1 --> because it's not used when cartClosed is true\n\n    })();\n  }\n\n  onNoClick() {\n    this.dialogRef.close();\n    this.myRouter.navigateByUrl(\"/home\");\n  }\n\n  ngOnDestroy() {\n    this.unsubscribeMe();\n  }\n\n};\nOrderSuccessDialogComponent = __decorate([Component({\n  selector: 'app-order-success-dialog',\n  templateUrl: './order-success-dialog.component.html',\n  styleUrls: ['./order-success-dialog.component.css'],\n  styles: []\n})], OrderSuccessDialogComponent);\nexport { OrderSuccessDialogComponent };","map":{"version":3,"sources":["C:\\Users\\user\\OneDrive\\מסמכים\\fullstack\\ANGULAR\\SECONDRESTORE\\Front\\src\\app\\components\\order-area\\order-units-dialog\\order-units-dialog.component.ts"],"names":[],"mappings":";;AAAA,SAAS,SAAT,QAA0C,eAA1C;AAMA,OAAO,KAAP,MAAkB,qBAAlB,C,CAIA;;AAOA,IAAa,2BAA2B,GAAxC,MAAa,2BAAb,CAAwC;AAUtC,EAAA,WAAA,CACS,SADT,EAEU,QAFV,EAGU,eAHV,EAIU,MAJV,EAKU,aALV,CAME;AANF,I;AACS,SAAA,SAAA,GAAA,SAAA;AACC,SAAA,QAAA,GAAA,QAAA;AACA,SAAA,eAAA,GAAA,eAAA;AACA,SAAA,MAAA,GAAA,MAAA;AACA,SAAA,aAAA,GAAA,aAAA;AAPH,SAAA,OAAA,GAAU,uCAAV;AASD;;AAGA,EAAA,QAAQ,GAAA;AAAA;;AAAA;AACZ,MAAA,KAAI,CAAC,aAAL,GAAqB,KAAK,CAAC,SAAN,CAAgB,MAAK;AACxC,QAAA,KAAI,CAAC,IAAL,GAAY,KAAK,CAAC,QAAN,GAAiB,SAAjB,CAA2B,IAAvC;AACH,OAFsB,CAArB,CADY,CAKd;;AACA,UAAI,IAAI,CAAC,KAAL,CAAW,YAAY,CAAC,OAAb,CAAqB,MAArB,CAAX,CAAJ,EAA8C;AAC1C,QAAA,KAAI,CAAC,IAAL,GAAY,KAAK,CAAC,QAAN,GAAiB,SAAjB,CAA2B,IAAvC;AACH;;AAED,YAAM,IAAI,GAAG,KAAI,CAAC,IAAL,CAAU,QAAvB,CAVc,CAWX;;AACA,UAAI;AACH,QAAA,KAAI,CAAC,MAAL,SAAoB,KAAI,CAAC,eAAL,CAAqB,kBAArB,CAAwC,IAAxC,CAApB;AACA,QAAA,KAAI,CAAC,QAAL,GAAgB,QAAQ,KAAI,CAAC,MAAL,CAAY,CAAZ,EAAe,OAAO,MAA9C;AACD,OAHA,CAGC,OAAO,GAAP,EAAY;AACV,QAAA,KAAI,CAAC,MAAL,CAAY,KAAZ,CAAkB,GAAlB;AACH;;AAED,MAAA,KAAI,CAAC,aAAL,CAAmB,UAAnB,CAA8B,IAA9B,EAAoC,CAApC,EAAuC,CAAC,CAAxC,EAnBY,CAmBgC;AAC5C;;AApBY;AAqBb;;AAED,EAAA,SAAS,GAAA;AACP,SAAK,SAAL,CAAe,KAAf;AACA,SAAK,QAAL,CAAc,aAAd,CAA4B,OAA5B;AAED;;AAED,EAAA,WAAW,GAAA;AACT,SAAK,aAAL;AACD;;AAnDqC,CAAxC;AAAa,2BAA2B,GAAA,UAAA,CAAA,CALvC,SAAS,CAAC;AACT,EAAA,QAAQ,EAAE,0BADD;AAET,EAAA,WAAW,EAAE,uCAFJ;AAGT,EAAA,SAAS,EAAE,CAAC,sCAAD,CAHF;;AAAA,CAAD,CAK8B,CAAA,EAA3B,2BAA2B,CAA3B;SAAA,2B","sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { Unsubscribe } from 'redux';\nimport OrderModel from 'src/app/models/order.model';\nimport UserModel from 'src/app/models/user.model';\nimport store from 'src/app/redux/store';\nimport { CartsService } from 'src/app/services/carts.service';\nimport { NotifyService } from 'src/app/services/notify.service';\nimport { OrderService } from 'src/app/services/order.service';\n// import { UnitsDialogComponent } from '../units-dialog/units-dialog.component';\n\n@Component({\n  selector: 'app-order-success-dialog',\n  templateUrl: './order-success-dialog.component.html',\n  styleUrls: ['./order-success-dialog.component.css']\n})\nexport class OrderSuccessDialogComponent {\n\n  // public image: FileList;\n\n  public orders: OrderModel[];\n  private unsubscribeMe: Unsubscribe;\n  private user: UserModel;\n  public fileName: string;\n  public fileDir = \"http://localhost:3030/api/orders/pdf/\";\n\n  constructor(\n    public dialogRef: MatDialogRef<OrderSuccessDialogComponent>,\n    private myRouter: Router,\n    private myOrdersService: OrderService,\n    private notify: NotifyService,\n    private myCartService: CartsService\n    // @Inject(MAT_DIALOG_DATA) public data: DialogData\n    ) {}\n\n\n  async ngOnInit() {\n    this.unsubscribeMe = store.subscribe(() => {\n      this.user = store.getState().authState.user;\n  });\n\n  // shai says this way the loggin in user will be shown automatically\n  if (JSON.parse(localStorage.getItem('user'))) {\n      this.user = store.getState().authState.user;\n  }\n\n  const uuid = this.user.UserUUID;\n     // GETS LAST ORDER\n     try {\n      this.orders = await this.myOrdersService.getLastOrderByUser(uuid);       \n      this.fileName = `Order${this.orders[0].OrderID}.pdf`\n    } catch (err) {\n        this.notify.error(err);\n    }\n\n    this.myCartService.cartUpdate(true, 0, -1); // notifies product card that cart is closed\n    // cartId = -1 --> because it's not used when cartClosed is true\n  }\n  \n  onNoClick(): void {\n    this.dialogRef.close();\n    this.myRouter.navigateByUrl(\"/home\");\n\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribeMe();\n  }\n\n\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}