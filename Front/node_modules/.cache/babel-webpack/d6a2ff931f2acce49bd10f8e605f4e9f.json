{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/user/OneDrive/\\u05DE\\u05E1\\u05DE\\u05DB\\u05D9\\u05DD/fullstack/ANGULAR/SECONDRESTORE/Front/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport ProductModel from 'src/app/models/product.model';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./../../../services/products.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/services/notify.service\";\nimport * as i4 from \"src/app/services/category.service\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@angular/material/select\";\nimport * as i10 from \"@angular/material/core\";\n\nfunction AddProductComponent_mat_error_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Missing name.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AddProductComponent_mat_error_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Name must start with a capital letter.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AddProductComponent_mat_error_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Missing price.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AddProductComponent_mat_option_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const c_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", c_r5.CategoryID);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(c_r5.CategoryName);\n  }\n}\n\nfunction AddProductComponent_mat_error_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Must select a category.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport class AddProductComponent {\n  constructor(myProductsService, myRouter, notify, myCategoryService) {\n    this.myProductsService = myProductsService;\n    this.myRouter = myRouter;\n    this.notify = notify;\n    this.myCategoryService = myCategoryService; // We must create an empty object for the Two-Way Binding:\n\n    this.product = new ProductModel();\n    this.nameControl = new FormControl(null, [Validators.required, Validators.pattern(\"^[A-Z].*$\")]);\n    this.priceControl = new FormControl(null, Validators.required);\n    this.categoryControl = new FormControl(null, Validators.required);\n    this.imageControl = new FormControl();\n    this.productForm = new FormGroup({\n      nameControl: this.nameControl,\n      priceControl: this.priceControl,\n      categoryControl: this.categoryControl,\n      imageControl: this.imageControl\n    });\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        _this.categories = yield _this.myCategoryService.getAllCategories();\n      } catch (err) {\n        _this.notify.error(err);\n      }\n    })();\n  }\n\n  saveImage(args) {\n    this.product.image = args.target.files;\n  } // public imageBlur(): void {\n  //     this.imageVisited = true;\n  // }\n\n\n  send() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        _this2.product.ProductName = _this2.nameControl.value;\n        _this2.product.UnitPrice = _this2.priceControl.value;\n        _this2.product.CategoryID = _this2.categoryControl.value;\n        yield _this2.myProductsService.addProduct(_this2.product);\n\n        _this2.notify.success(\"Product has been added.\"); // this.myRouter.navigateByUrl(\"/products\");\n\n      } catch (err) {\n        _this2.notify.error(err);\n      }\n    })();\n  }\n\n}\n\nAddProductComponent.ɵfac = function AddProductComponent_Factory(t) {\n  return new (t || AddProductComponent)(i0.ɵɵdirectiveInject(i1.ProductsService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.NotifyService), i0.ɵɵdirectiveInject(i4.CategoryService));\n};\n\nAddProductComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddProductComponent,\n  selectors: [[\"app-add-product\"]],\n  decls: 28,\n  vars: 11,\n  consts: [[1, \"box\"], [3, \"formGroup\", \"submit\"], [\"appearance\", \"outline\"], [\"matInput\", \"\", \"type\", \"text\", \"required\", \"\", 3, \"formControl\"], [4, \"ngIf\"], [\"matInput\", \"\", \"type\", \"number\", \"required\", \"\", 3, \"formControl\"], [\"matInput\", \"\", \"required\", \"\", 3, \"formControl\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"matInput\", \"\", 3, \"formControl\"], [\"type\", \"file\", \"accept\", \"image/jpeg\", \"required\", \"\", 3, \"change\"], [3, \"disabled\"], [3, \"value\"]],\n  template: function AddProductComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"form\", 1);\n      i0.ɵɵlistener(\"submit\", function AddProductComponent_Template_form_submit_1_listener() {\n        return ctx.send();\n      });\n      i0.ɵɵtext(2, \" Add a product \");\n      i0.ɵɵelement(3, \"br\");\n      i0.ɵɵelementStart(4, \"mat-form-field\", 2);\n      i0.ɵɵelementStart(5, \"mat-label\");\n      i0.ɵɵtext(6, \"Name: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 3);\n      i0.ɵɵtemplate(8, AddProductComponent_mat_error_8_Template, 2, 0, \"mat-error\", 4);\n      i0.ɵɵtemplate(9, AddProductComponent_mat_error_9_Template, 2, 0, \"mat-error\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"mat-form-field\", 2);\n      i0.ɵɵelementStart(11, \"mat-label\");\n      i0.ɵɵtext(12, \"Price: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 5);\n      i0.ɵɵtemplate(14, AddProductComponent_mat_error_14_Template, 2, 0, \"mat-error\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"mat-form-field\", 2);\n      i0.ɵɵelementStart(16, \"mat-label\");\n      i0.ɵɵtext(17, \"Category: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"mat-select\", 6);\n      i0.ɵɵtemplate(19, AddProductComponent_mat_option_19_Template, 2, 2, \"mat-option\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(20, AddProductComponent_mat_error_20_Template, 2, 0, \"mat-error\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"mat-form-field\");\n      i0.ɵɵelementStart(22, \"mat-label\");\n      i0.ɵɵtext(23, \"Image: *\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(24, \"input\", 8);\n      i0.ɵɵelementStart(25, \"input\", 9);\n      i0.ɵɵlistener(\"change\", function AddProductComponent_Template_input_change_25_listener($event) {\n        return ctx.saveImage($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"button\", 10);\n      i0.ɵɵtext(27, \"Add\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.productForm);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"formControl\", ctx.nameControl);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.nameControl.errors == null ? null : ctx.nameControl.errors.required);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.nameControl.errors == null ? null : ctx.nameControl.errors.pattern) && ctx.nameControl.touched);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formControl\", ctx.priceControl);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.priceControl.invalid);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formControl\", ctx.categoryControl);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.categories);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.categoryControl.errors == null ? null : ctx.categoryControl.errors.required);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formControl\", ctx.imageControl);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.productForm.invalid);\n    }\n  },\n  directives: [i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.FormGroupDirective, i6.MatFormField, i6.MatLabel, i7.MatInput, i5.DefaultValueAccessor, i5.RequiredValidator, i5.NgControlStatus, i5.FormControlDirective, i8.NgIf, i5.NumberValueAccessor, i9.MatSelect, i8.NgForOf, i6.MatError, i10.MatOption],\n  styles: [\"form[_ngcontent-%COMP%] {\\r\\n    width: 300px;\\r\\n    margin: auto;\\r\\n    text-align: left;\\r\\n}\\r\\n\\r\\ninput[_ngcontent-%COMP%], button[_ngcontent-%COMP%], label[_ngcontent-%COMP%] {\\r\\n\\twidth: 100%;\\r\\n    box-sizing: border-box;\\r\\n    font-size: x-large;\\r\\n    margin-bottom: 30px;\\r\\n}\\r\\n\\r\\nspan[_ngcontent-%COMP%] {\\r\\n    position: absolute;\\r\\n    margin: 0 20px;\\r\\n    color: red;\\r\\n    font-size: x-large;\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkZC1wcm9kdWN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0lBQ1osWUFBWTtJQUNaLGdCQUFnQjtBQUNwQjs7QUFFQTtDQUNDLFdBQVc7SUFDUixzQkFBc0I7SUFDdEIsa0JBQWtCO0lBQ2xCLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixjQUFjO0lBQ2QsVUFBVTtJQUNWLGtCQUFrQjtBQUN0QiIsImZpbGUiOiJhZGQtcHJvZHVjdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiZm9ybSB7XHJcbiAgICB3aWR0aDogMzAwcHg7XHJcbiAgICBtYXJnaW46IGF1dG87XHJcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG59XHJcblxyXG5pbnB1dCwgYnV0dG9uLCBsYWJlbCB7XHJcblx0d2lkdGg6IDEwMCU7XHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gICAgZm9udC1zaXplOiB4LWxhcmdlO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMzBweDtcclxufVxyXG5cclxuc3BhbiB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBtYXJnaW46IDAgMjBweDtcclxuICAgIGNvbG9yOiByZWQ7XHJcbiAgICBmb250LXNpemU6IHgtbGFyZ2U7XHJcbn0iXX0= */\"]\n});","map":{"version":3,"sources":["C:\\Users\\user\\OneDrive\\מסמכים\\fullstack\\ANGULAR\\SECONDRESTORE\\Front\\src\\app\\components\\products-area\\add-product\\add-product.component.ts","C:\\Users\\user\\OneDrive\\מסמכים\\fullstack\\ANGULAR\\SECONDRESTORE\\Front\\src\\app\\components\\products-area\\add-product\\add-product.component.html"],"names":[],"mappings":";AAIA,OAAO,YAAP,MAAyB,8BAAzB;AAKA,SAAS,WAAT,EAAsB,SAAtB,EAAiC,UAAjC,QAAmD,gBAAnD;;;;;;;;;;;;;;;ACCY,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,WAAA;AAAgD,IAAA,EAAA,CAAA,MAAA,CAAA,CAAA,EAAA,eAAA;AAAa,IAAA,EAAA,CAAA,YAAA;;;;;;AAC7D,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,WAAA;AAAsE,IAAA,EAAA,CAAA,MAAA,CAAA,CAAA,EAAA,wCAAA;AAAsC,IAAA,EAAA,CAAA,YAAA;;;;;;AAM5G,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,WAAA;AAAwC,IAAA,EAAA,CAAA,MAAA,CAAA,CAAA,EAAA,gBAAA;AAAc,IAAA,EAAA,CAAA,YAAA;;;;;;AAMlD,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,YAAA,EAAA,EAAA;AAAgE,IAAA,EAAA,CAAA,MAAA,CAAA,CAAA;AAAkB,IAAA,EAAA,CAAA,YAAA;;;;;AAAzC,IAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,IAAA,CAAA,UAAA;AAAuB,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,CAAA,YAAA;;;;;;AAEpE,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,WAAA;AAAoD,IAAA,EAAA,CAAA,MAAA,CAAA,CAAA,EAAA,yBAAA;AAAuB,IAAA,EAAA,CAAA,YAAA;;;;ADTvF,OAAM,MAAO,mBAAP,CAA0B;AAiB5B,EAAA,WAAA,CACY,iBADZ,EAEY,QAFZ,EAGY,MAHZ,EAIY,iBAJZ,EAI8C;AAHlC,SAAA,iBAAA,GAAA,iBAAA;AACA,SAAA,QAAA,GAAA,QAAA;AACA,SAAA,MAAA,GAAA,MAAA;AACA,SAAA,iBAAA,GAAA,iBAAA,CAAkC,CAnB9C;;AACO,SAAA,OAAA,GAAU,IAAI,YAAJ,EAAV;AAmBC,SAAK,WAAL,GAAmB,IAAI,WAAJ,CAAgB,IAAhB,EAAsB,CAAC,UAAU,CAAC,QAAZ,EAAsB,UAAU,CAAC,OAAX,CAAmB,WAAnB,CAAtB,CAAtB,CAAnB;AACA,SAAK,YAAL,GAAoB,IAAI,WAAJ,CAAgB,IAAhB,EAAsB,UAAU,CAAC,QAAjC,CAApB;AACA,SAAK,eAAL,GAAuB,IAAI,WAAJ,CAAgB,IAAhB,EAAsB,UAAU,CAAC,QAAjC,CAAvB;AACA,SAAK,YAAL,GAAoB,IAAI,WAAJ,EAApB;AACA,SAAK,WAAL,GAAmB,IAAI,SAAJ,CAAc;AAC7B,MAAA,WAAW,EAAE,KAAK,WADW;AAE7B,MAAA,YAAY,EAAE,KAAK,YAFU;AAG7B,MAAA,eAAe,EAAE,KAAK,eAHO;AAI7B,MAAA,YAAY,EAAE,KAAK;AAJU,KAAd,CAAnB;AAOF;;AAIA,EAAA,QAAQ,GAAA;AAAA;;AAAA;AACV,UAAI;AACA,QAAA,KAAI,CAAC,UAAL,SAAwB,KAAI,CAAC,iBAAL,CAAuB,gBAAvB,EAAxB;AACH,OAFD,CAGA,OAAO,GAAP,EAAY;AACR,QAAA,KAAI,CAAC,MAAL,CAAY,KAAZ,CAAkB,GAAlB;AACH;AANS;AAOb;;AAEM,EAAA,SAAS,CAAC,IAAD,EAAY;AACxB,SAAK,OAAL,CAAa,KAAb,GAAsB,IAAI,CAAC,MAAL,CAAiC,KAAvD;AACH,GAhD2B,CAkD5B;AACA;AACA;;;AAEa,EAAA,IAAI,GAAA;AAAA;;AAAA;AACb,UAAI;AACA,QAAA,MAAI,CAAC,OAAL,CAAa,WAAb,GAA2B,MAAI,CAAC,WAAL,CAAiB,KAA5C;AACA,QAAA,MAAI,CAAC,OAAL,CAAa,SAAb,GAAyB,MAAI,CAAC,YAAL,CAAkB,KAA3C;AACA,QAAA,MAAI,CAAC,OAAL,CAAa,UAAb,GAA0B,MAAI,CAAC,eAAL,CAAqB,KAA/C;AACA,cAAM,MAAI,CAAC,iBAAL,CAAuB,UAAvB,CAAkC,MAAI,CAAC,OAAvC,CAAN;;AACA,QAAA,MAAI,CAAC,MAAL,CAAY,OAAZ,CAAoB,yBAApB,EALA,CAMA;;AACH,OAPD,CAQA,OAAM,GAAN,EAAW;AACP,QAAA,MAAI,CAAC,MAAL,CAAY,KAAZ,CAAkB,GAAlB;AACH;AAXY;AAYhB;;AAlE2B;;;mBAAnB,mB,EAAmB,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,eAAA,C,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,MAAA,C,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,aAAA,C,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,eAAA,C;AAAA,C;;;QAAnB,mB;AAAmB,EAAA,SAAA,EAAA,CAAA,CAAA,iBAAA,CAAA,C;AAAA,EAAA,KAAA,EAAA,E;AAAA,EAAA,IAAA,EAAA,E;AAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA,EAAA,KAAA,CAAA,EAAA,CAAA,CAAA,EAAA,WAAA,EAAA,QAAA,CAAA,EAAA,CAAA,YAAA,EAAA,SAAA,CAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,MAAA,EAAA,MAAA,EAAA,UAAA,EAAA,EAAA,EAAA,CAAA,EAAA,aAAA,CAAA,EAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,MAAA,EAAA,QAAA,EAAA,UAAA,EAAA,EAAA,EAAA,CAAA,EAAA,aAAA,CAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,UAAA,EAAA,EAAA,EAAA,CAAA,EAAA,aAAA,CAAA,EAAA,CAAA,CAAA,EAAA,OAAA,EAAA,CAAA,EAAA,OAAA,EAAA,SAAA,CAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,CAAA,EAAA,aAAA,CAAA,EAAA,CAAA,MAAA,EAAA,MAAA,EAAA,QAAA,EAAA,YAAA,EAAA,UAAA,EAAA,EAAA,EAAA,CAAA,EAAA,QAAA,CAAA,EAAA,CAAA,CAAA,EAAA,UAAA,CAAA,EAAA,CAAA,CAAA,EAAA,OAAA,CAAA,C;AAAA,EAAA,QAAA,EAAA,SAAA,4BAAA,CAAA,EAAA,EAAA,GAAA,EAAA;AAAA,QAAA,EAAA,GAAA,CAAA,EAAA;AChBhC,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA;AAEI,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,MAAA,EAAA,CAAA;AAAM,MAAA,EAAA,CAAA,UAAA,CAAA,QAAA,EAAA,SAAA,mDAAA,GAAA;AAAA,eAAU,GAAA,CAAA,IAAA,EAAV;AAAgB,OAAhB;AAEF,MAAA,EAAA,CAAA,MAAA,CAAA,CAAA,EAAA,iBAAA;AACA,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA,EAAA,IAAA;AAEA,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,gBAAA,EAAA,CAAA;AACI,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,WAAA;AAAW,MAAA,EAAA,CAAA,MAAA,CAAA,CAAA,EAAA,QAAA;AAAM,MAAA,EAAA,CAAA,YAAA;AACjB,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA,EAAA,OAAA,EAAA,CAAA;AACA,MAAA,EAAA,CAAA,UAAA,CAAA,CAAA,EAAA,wCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,WAAA,EAAA,CAAA;AACA,MAAA,EAAA,CAAA,UAAA,CAAA,CAAA,EAAA,wCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,WAAA,EAAA,CAAA;AACJ,MAAA,EAAA,CAAA,YAAA;AAEA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,gBAAA,EAAA,CAAA;AACI,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,WAAA;AAAW,MAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,SAAA;AAAO,MAAA,EAAA,CAAA,YAAA;AAClB,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,OAAA,EAAA,CAAA;AACA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,yCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,WAAA,EAAA,CAAA;AACJ,MAAA,EAAA,CAAA,YAAA;AAEA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,gBAAA,EAAA,CAAA;AACI,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,WAAA;AAAW,MAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,YAAA;AAAU,MAAA,EAAA,CAAA,YAAA;AACrB,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,YAAA,EAAA,CAAA;AACI,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,0CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,YAAA,EAAA,CAAA;AACJ,MAAA,EAAA,CAAA,YAAA;AACA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,yCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,WAAA,EAAA,CAAA;AACJ,MAAA,EAAA,CAAA,YAAA;AAEE,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,gBAAA;AACM,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,WAAA;AAAW,MAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,UAAA;AAAQ,MAAA,EAAA,CAAA,YAAA;AACnB,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,OAAA,EAAA,CAAA;AACA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,OAAA,EAAA,CAAA;AAAmB,MAAA,EAAA,CAAA,UAAA,CAAA,QAAA,EAAA,SAAA,qDAAA,CAAA,MAAA,EAAA;AAAA,eAAU,GAAA,CAAA,SAAA,CAAA,MAAA,CAAV;AAA2B,OAA3B;AAAnB,MAAA,EAAA,CAAA,YAAA;AAER,MAAA,EAAA,CAAA,YAAA;AAKA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,QAAA,EAAA,EAAA;AAAyC,MAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,KAAA;AAAG,MAAA,EAAA,CAAA,YAAA;AAEhD,MAAA,EAAA,CAAA,YAAA;AA6BJ,MAAA,EAAA,CAAA,YAAA;;;;AAnE4B,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,WAAA,EAAA,GAAA,CAAA,WAAA;AAOY,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,aAAA,EAAA,GAAA,CAAA,WAAA;AAChB,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,GAAA,CAAA,WAAA,CAAA,MAAA,IAAA,IAAA,GAAA,IAAA,GAAA,GAAA,CAAA,WAAA,CAAA,MAAA,CAAA,QAAA;AACA,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,CAAA,GAAA,CAAA,WAAA,CAAA,MAAA,IAAA,IAAA,GAAA,IAAA,GAAA,GAAA,CAAA,WAAA,CAAA,MAAA,CAAA,OAAA,KAAA,GAAA,CAAA,WAAA,CAAA,OAAA;AAKkB,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,aAAA,EAAA,GAAA,CAAA,YAAA;AAClB,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,GAAA,CAAA,YAAA,CAAA,OAAA;AAKS,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,aAAA,EAAA,GAAA,CAAA,eAAA;AACS,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,UAAA;AAElB,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,GAAA,CAAA,eAAA,CAAA,MAAA,IAAA,IAAA,GAAA,IAAA,GAAA,GAAA,CAAA,eAAA,CAAA,MAAA,CAAA,QAAA;AAKQ,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,aAAA,EAAA,GAAA,CAAA,YAAA;AAQhB,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,UAAA,EAAA,GAAA,CAAA,WAAA,CAAA,OAAA","sourcesContent":["import { ProductsService } from './../../../services/products.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport ProductModel from 'src/app/models/product.model';\nimport { NotifyService } from 'src/app/services/notify.service';\nimport { environment } from 'src/environments/environment';\nimport { CategoryService } from 'src/app/services/category.service';\nimport CategoryModel from 'src/app/models/category.model';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n    selector: 'app-add-product',\n    templateUrl: './add-product.component.html',\n    styleUrls: ['./add-product.component.css']\n})\nexport class AddProductComponent {\n\n    // We must create an empty object for the Two-Way Binding:\n    public product = new ProductModel();\n    // public imageVisited: boolean;\n    public categories: CategoryModel[];\n    // public addRequest: boolean;\n\n    // FormGroup is an object representing the <form> element: \n    public productForm: FormGroup;\n\n    // FormControl is an object representing an <input>/<select>/<textarea> element:\n    public nameControl: FormControl;\n    public priceControl: FormControl;\n    public imageControl: FormControl;\n    public categoryControl: FormControl;\n\n    constructor(\n        private myProductsService: ProductsService,\n        private myRouter: Router,\n        private notify: NotifyService,\n        private myCategoryService: CategoryService) {\n            this.nameControl = new FormControl(null, [Validators.required, Validators.pattern(\"^[A-Z].*$\")]);\n            this.priceControl = new FormControl(null, Validators.required);\n            this.categoryControl = new FormControl(null, Validators.required);\n            this.imageControl = new FormControl();\n            this.productForm = new FormGroup({\n                nameControl: this.nameControl,\n                priceControl: this.priceControl,\n                categoryControl: this.categoryControl,\n                imageControl: this.imageControl\n        });\n\n         }\n\n\n\n    async ngOnInit() {\n        try {\n            this.categories = await this.myCategoryService.getAllCategories();\n        }\n        catch (err) {\n            this.notify.error(err);\n        }\n    }\n\n    public saveImage(args: Event): void {\n        this.product.image = (args.target as HTMLInputElement).files;\n    }\n\n    // public imageBlur(): void {\n    //     this.imageVisited = true;\n    // }\n\n    public async send() {\n        try {\n            this.product.ProductName = this.nameControl.value;\n            this.product.UnitPrice = this.priceControl.value;\n            this.product.CategoryID = this.categoryControl.value;\n            await this.myProductsService.addProduct(this.product);\n            this.notify.success(\"Product has been added.\");\n            // this.myRouter.navigateByUrl(\"/products\");\n        }\n        catch(err) {\n            this.notify.error(err);\n        }\n    }\n    \n}\n","<div class=\"box\">\n\n    <form (submit)=\"send()\" [formGroup]=\"productForm\">\n\n        Add a product\n        <br/>\n\n        <mat-form-field appearance=\"outline\">\n            <mat-label>Name: </mat-label>\n            <input matInput type=\"text\" [formControl]=\"nameControl\" required>\n            <mat-error *ngIf=\"nameControl.errors?.required\">Missing name.</mat-error>\n            <mat-error *ngIf=\"nameControl.errors?.pattern && nameControl.touched\">Name must start with a capital letter.</mat-error>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\">\n            <mat-label>Price: </mat-label>\n            <input matInput type=\"number\" [formControl]=\"priceControl\" required>\n            <mat-error *ngIf=\"priceControl.invalid\">Missing price.</mat-error>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\">\n            <mat-label>Category: </mat-label>\n            <mat-select matInput [formControl]=\"categoryControl\" required>\n                <mat-option *ngFor=\"let c of categories\" [value]=\"c.CategoryID\">{{c.CategoryName}}</mat-option>\n            </mat-select>\n            <mat-error *ngIf=\"categoryControl.errors?.required\">Must select a category.</mat-error>\n        </mat-form-field>\n\n          <mat-form-field>\n                <mat-label>Image: *</mat-label>\n                <input matInput [formControl]=\"imageControl\"/>\n                <input type=\"file\" (change)=\"saveImage($event)\"\n                accept=\"image/jpeg\" required/>\n        </mat-form-field>\n\n        <!-- <label>Image: </label> -->\n        <!-- <input type=\"file\" [formControl]=\"imageControl\" (change)=\"saveImage($event)\"> -->\n\n        <button [disabled]=\"productForm.invalid\">Add</button>\n\n    </form>\n\n<!-- \n    <form #myForm=\"ngForm\" (submit)=\"send()\">\n\n        Add product\n\n        <label>Name: </label>\n        <input #nameBox=\"ngModel\" type=\"text\" [(ngModel)]=\"product.ProductName\" name=\"ProductName\" required pattern=\"^[A-Z].*$\">\n        <span *ngIf=\"nameBox.errors?.required && nameBox.touched\">Missing name.</span>\n        <span *ngIf=\"nameBox.errors?.pattern && nameBox.touched\">Name must start with a capital letter.</span>\n\n        <label>Price: </label>\n        <input #priceBox=\"ngModel\" type=\"number\" step=\"0.01\" [(ngModel)]=\"product.UnitPrice\" name=\"UnitPrice\" required>\n        <span *ngIf=\"priceBox.invalid && priceBox.touched\">Missing price.</span>\n\n        <label>Category</label>\n        <select #categoryBox=\"ngModel\" type=\"text\" [(ngModel)]=\"product.CategoryID\" name=\"CategoryID\" required>\n            <option *ngFor=\"let c of categories\" [value]=\"c.CategoryID\">{{c.CategoryName}}</option>\n        </select>\n\n        <label>Image: </label>\n        <input type=\"file\" accept=\"image/*\" (change)=\"saveImage($event)\" (blur)=\"imageBlur()\" required>\n        <span *ngIf=\"imageVisited && !product.image\">Missing image.</span>\n\n        <button [disabled]=\"myForm.form.invalid\">Add</button>\n\n    </form> -->\n\n</div>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}