{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/user/OneDrive/\\u05DE\\u05E1\\u05DE\\u05DB\\u05D9\\u05DD/fullstack/ANGULAR/SECONDRESTORE/Front/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport OrderModel from 'src/app/models/order.model';\nimport store from 'src/app/redux/store';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { OrderSuccessDialogComponent } from '../order-success-dialog/order-success-dialog.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/item.service\";\nimport * as i3 from \"src/app/services/carts.service\";\nimport * as i4 from \"src/app/services/order.service\";\nimport * as i5 from \"src/app/services/city.service\";\nimport * as i6 from \"src/app/services/notify.service\";\nimport * as i7 from \"@angular/material/dialog\";\nimport * as i8 from \"@angular/forms\";\nimport * as i9 from \"@angular/material/form-field\";\nimport * as i10 from \"@angular/material/select\";\nimport * as i11 from \"@angular/common\";\nimport * as i12 from \"@angular/material/input\";\nimport * as i13 from \"@angular/material/datepicker\";\nimport * as i14 from \"@angular/material/button\";\nimport * as i15 from \"@angular/material/icon\";\nimport * as i16 from \"@angular/material/core\";\n\nfunction OrderSubmitComponent_mat_option_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const c_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", c_r7.city);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(c_r7.city);\n  }\n}\n\nfunction OrderSubmitComponent_mat_error_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Missing city\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction OrderSubmitComponent_mat_error_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Missing street\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction OrderSubmitComponent_mat_error_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Missing shipping date\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction OrderSubmitComponent_mat_error_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Missing credit card\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction OrderSubmitComponent_mat_error_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Missing correct credit card deails\");\n    i0.ɵɵelementEnd();\n  }\n} // import { DatePipe } from '@angular/common';\n// import {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\n// import { OrderBoxComponent } from '../order-box/order-box.component';\n// export interface DialogData {\n//   sure: string;\n// }\n\n\nexport class OrderSubmitComponent {\n  constructor( // public dialog: MatDialog,\n  myActivatedRoute, myItemService, myCartService, myOrdersService, myCityService, notify, myRouter, dialog) {\n    this.myActivatedRoute = myActivatedRoute;\n    this.myItemService = myItemService;\n    this.myCartService = myCartService;\n    this.myOrdersService = myOrdersService;\n    this.myCityService = myCityService;\n    this.notify = notify;\n    this.myRouter = myRouter;\n    this.dialog = dialog;\n    this.order = new OrderModel();\n    this.today = new Date();\n    this.myBookedDates = []; // blocks dates with 3 deliveries from datepicker\n\n    this.myFilter = d => {\n      return !this.myBookedDates.find(x => x.getTime() == d.getTime());\n    }; // this.cityControl = new FormControl(null, [Validators.required, Validators.pattern(\"^[A-Z].*$\")]);\n\n\n    this.cityControl = new FormControl(null, [Validators.required]);\n    this.streetControl = new FormControl(null, Validators.required);\n    this.deliveryControl = new FormControl(null, [Validators.required]); // matches Visa, MasterCard, American Express, Diners Club, Discover, and JCB cards:\n    // there is one more updated here? https://regex101.com/r/37S1iV/1\n\n    this.creditControl = new FormControl(null, [Validators.required, Validators.pattern(\"^(?:4[0-9]{12}(?:[0-9]{3})?|[25][1-7][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$\")]);\n    this.orderForm = new FormGroup({\n      cityControl: this.cityControl,\n      streetControl: this.streetControl,\n      deliveryControl: this.deliveryControl,\n      creditControl: this.creditControl\n    });\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.unsubscribeMe = store.subscribe(() => {\n        _this.user = store.getState().authState.user;\n      }); // shai says this way the loggin in user will be shown automatically\n\n      if (JSON.parse(localStorage.getItem('user'))) {\n        _this.user = store.getState().authState.user;\n      } // this.current = new Date();\n\n\n      const uuid = _this.user.UserUUID;\n\n      try {\n        _this.cart = yield _this.myCartService.getLastCartByUser(uuid);\n      } catch (err) {\n        _this.notify.error(err);\n      }\n\n      try {\n        _this.cities = yield _this.myCityService.getAllCities();\n      } catch (err) {\n        _this.notify.error(err);\n      }\n\n      try {\n        _this.items = yield _this.myItemService.getOpenCartItems(_this.cart[0].CartID);\n      } catch (err) {\n        _this.notify.error(err);\n      }\n\n      try {\n        _this.bookedDates = yield _this.myOrdersService.getFullyBookedDates();\n      } catch (err) {\n        _this.notify.error(err);\n      }\n\n      for (let date of _this.bookedDates) {\n        const dateObj = new Date(date.Delivery);\n\n        _this.myBookedDates.push(dateObj);\n      }\n    })();\n  }\n\n  ngOnDestroy() {\n    this.unsubscribeMe();\n  }\n\n  dblstreet() {\n    this.streetControl.setValue(this.user.street);\n  }\n\n  submit() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const answer = confirm(\"Are you sure you want to ship your order?\");\n      if (!answer) return; // because onInit is only doing it onde with no REFRESH\n      // try {\n      //     this.orders = await this.myOrdersService.getAllOrdersByOrderIdDesc();\n      //   }\n      // catch (err) {\n      //     this.notify.error(err);\n      //  }\n\n      try {\n        _this2.order.UserUUID = _this2.user.uuid;\n        _this2.order.CartID = _this2.cart[0].CartID;\n        _this2.order.TotalPrice = _this2.myItemService.totalCartPerUser(_this2.items);\n        _this2.order.Date = new Date().toString(); // console.log(this.datepipe.transform(this.order.date, 'yyyy-mm--dd'));\n\n        _this2.order.City = _this2.cityControl.value;\n        _this2.order.Street = _this2.streetControl.value;\n        _this2.order.Delivery = _this2.deliveryControl.value.toDateString();\n        _this2.order.CreditCard = _this2.creditControl.value.slice(-4); // this.order.ProductName = cart.ProductName;\n\n        yield _this2.myOrdersService.addOrder(_this2.order); //// MUST SEPERATE IT INTO DIFFERENT FUNCTION LIKE IN PRODUCT-CARD-COMPONENT\n        // this.notify.success(\"Order has been added.\");\n        // this.myRouter.navigateByUrl(\"/products\");\n      } catch (err) {\n        _this2.notify.error(err); // OPEN ANOTHER DIALOG BOX???\n\n      }\n\n      _this2.openDialog();\n    })();\n  }\n\n  openDialog() {\n    const dialogRef = this.dialog.open(OrderSuccessDialogComponent, {// data: {lastOrderID: this.orders[0].OrderID}\n    });\n    dialogRef.afterClosed().subscribe( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (result) {\n        console.log('The dialog was closed'); // this.quantity = result;\n      });\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n  }\n\n}\n\nOrderSubmitComponent.ɵfac = function OrderSubmitComponent_Factory(t) {\n  return new (t || OrderSubmitComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.ItemService), i0.ɵɵdirectiveInject(i3.CartsService), i0.ɵɵdirectiveInject(i4.OrderService), i0.ɵɵdirectiveInject(i5.CityService), i0.ɵɵdirectiveInject(i6.NotifyService), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i7.MatDialog));\n};\n\nOrderSubmitComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: OrderSubmitComponent,\n  selectors: [[\"app-order-submit\"]],\n  decls: 40,\n  vars: 16,\n  consts: [[\"routerLink\", \"/products\", \"routerLinkActive\", \"active\"], [3, \"formGroup\", \"submit\"], [\"appearance\", \"outline\"], [\"matInput\", \"\", \"required\", \"\", 3, \"formControl\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [\"matInput\", \"\", \"type\", \"text\", \"required\", \"\", 3, \"formControl\", \"dblclick\"], [\"matInput\", \"\", \"required\", \"\", 3, \"matDatepicker\", \"matDatepickerFilter\", \"min\", \"formControl\"], [\"matSuffix\", \"\", 3, \"for\"], [\"picker\", \"\"], [\"matInput\", \"\", \"type\", \"text\", \"required\", \"\", 3, \"formControl\"], [\"mat-stroked-button\", \"\", 3, \"disabled\"], [3, \"value\"]],\n  template: function OrderSubmitComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"a\", 0);\n      i0.ɵɵtext(1, \"Back to shop\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"h3\");\n      i0.ɵɵtext(3, \" ORDER\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\");\n      i0.ɵɵelementStart(5, \"form\", 1);\n      i0.ɵɵlistener(\"submit\", function OrderSubmitComponent_Template_form_submit_5_listener() {\n        return ctx.submit();\n      });\n      i0.ɵɵelementStart(6, \"h4\");\n      i0.ɵɵtext(7, \"Shipping details\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"mat-form-field\", 2);\n      i0.ɵɵelementStart(9, \"mat-label\");\n      i0.ɵɵtext(10, \"City: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"mat-select\", 3);\n      i0.ɵɵtemplate(12, OrderSubmitComponent_mat_option_12_Template, 2, 2, \"mat-option\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(13, OrderSubmitComponent_mat_error_13_Template, 2, 0, \"mat-error\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"mat-form-field\", 2);\n      i0.ɵɵelementStart(15, \"mat-label\");\n      i0.ɵɵtext(16, \"Street: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"input\", 6);\n      i0.ɵɵlistener(\"dblclick\", function OrderSubmitComponent_Template_input_dblclick_17_listener() {\n        return ctx.dblstreet();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(18, OrderSubmitComponent_mat_error_18_Template, 2, 0, \"mat-error\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"mat-form-field\", 2);\n      i0.ɵɵelementStart(20, \"mat-label\");\n      i0.ɵɵtext(21, \"Shipping date: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(22, \"input\", 7);\n      i0.ɵɵelement(23, \"mat-datepicker-toggle\", 8);\n      i0.ɵɵelement(24, \"mat-datepicker\", null, 9);\n      i0.ɵɵtemplate(26, OrderSubmitComponent_mat_error_26_Template, 2, 0, \"mat-error\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"h4\");\n      i0.ɵɵtext(28, \"Payments:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(29, \"hr\");\n      i0.ɵɵelementStart(30, \"mat-form-field\", 2);\n      i0.ɵɵelementStart(31, \"mat-label\");\n      i0.ɵɵtext(32, \"Credit card: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(33, \"input\", 10);\n      i0.ɵɵtemplate(34, OrderSubmitComponent_mat_error_34_Template, 2, 0, \"mat-error\", 5);\n      i0.ɵɵtemplate(35, OrderSubmitComponent_mat_error_35_Template, 2, 0, \"mat-error\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"button\", 11);\n      i0.ɵɵelementStart(37, \"mat-icon\");\n      i0.ɵɵtext(38, \"send\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(39, \" Order \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      const _r3 = i0.ɵɵreference(25);\n\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formGroup\", ctx.orderForm);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"formControl\", ctx.cityControl);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.cities);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.cityControl.errors == null ? null : ctx.cityControl.errors.required);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formControl\", ctx.streetControl);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.streetControl.errors == null ? null : ctx.streetControl.errors.required);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"matDatepicker\", _r3)(\"matDatepickerFilter\", ctx.myFilter)(\"min\", ctx.today)(\"formControl\", ctx.deliveryControl);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"for\", _r3);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.deliveryControl.errors == null ? null : ctx.deliveryControl.errors.required);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"formControl\", ctx.creditControl);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.creditControl.errors == null ? null : ctx.creditControl.errors.required);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.creditControl.errors == null ? null : ctx.creditControl.errors.pattern) && ctx.creditControl.touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", ctx.orderForm.invalid);\n    }\n  },\n  directives: [i1.RouterLinkWithHref, i1.RouterLinkActive, i8.ɵNgNoValidate, i8.NgControlStatusGroup, i8.FormGroupDirective, i9.MatFormField, i9.MatLabel, i10.MatSelect, i8.RequiredValidator, i8.NgControlStatus, i8.FormControlDirective, i11.NgForOf, i11.NgIf, i12.MatInput, i8.DefaultValueAccessor, i13.MatDatepickerInput, i13.MatDatepickerToggle, i9.MatSuffix, i13.MatDatepicker, i14.MatButton, i15.MatIcon, i16.MatOption, i9.MatError],\n  styles: [\"form[_ngcontent-%COMP%], mat-form-field[_ngcontent-%COMP%]  {\\r\\n    width: 300px;\\r\\n    margin: auto;\\r\\n    text-align: left;\\r\\n}\\r\\n\\r\\ninput[_ngcontent-%COMP%], button[_ngcontent-%COMP%], label[_ngcontent-%COMP%] {\\r\\n\\twidth: 100%;\\r\\n    box-sizing: border-box;\\r\\n    font-size: x-large;\\r\\n    margin-bottom: 20px;\\r\\n}\\r\\n\\r\\nspan[_ngcontent-%COMP%] {\\r\\n    position: absolute;\\r\\n    margin: 0 20px;\\r\\n    color: red;\\r\\n    font-size: x-large;\\r\\n}\\r\\n\\r\\na[_ngcontent-%COMP%] {\\r\\n    position: absolute;\\r\\n    left: 235px;\\r\\n    margin-top: 20px;\\r\\n    \\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9yZGVyLXN1Ym1pdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtJQUNJLFlBQVk7SUFDWixZQUFZO0lBQ1osZ0JBQWdCO0FBQ3BCOztBQUVBO0NBQ0MsV0FBVztJQUNSLHNCQUFzQjtJQUN0QixrQkFBa0I7SUFDbEIsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLGNBQWM7SUFDZCxVQUFVO0lBQ1Ysa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLFdBQVc7SUFDWCxnQkFBZ0I7O0FBRXBCOztBQUNBOztHQUVHIiwiZmlsZSI6Im9yZGVyLXN1Ym1pdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmZvcm0sIG1hdC1mb3JtLWZpZWxkICB7XHJcbiAgICB3aWR0aDogMzAwcHg7XHJcbiAgICBtYXJnaW46IGF1dG87XHJcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG59XHJcblxyXG5pbnB1dCwgYnV0dG9uLCBsYWJlbCB7XHJcblx0d2lkdGg6IDEwMCU7XHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gICAgZm9udC1zaXplOiB4LWxhcmdlO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxufVxyXG5cclxuc3BhbiB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBtYXJnaW46IDAgMjBweDtcclxuICAgIGNvbG9yOiByZWQ7XHJcbiAgICBmb250LXNpemU6IHgtbGFyZ2U7XHJcbn1cclxuXHJcbmEge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgbGVmdDogMjM1cHg7XHJcbiAgICBtYXJnaW4tdG9wOiAyMHB4O1xyXG4gICAgXHJcbn1cclxuLyogLm1hdC1mb3JtLWZpZWxkLWFwcGVhcmFuY2Utb3V0bGluZSAubWF0LWZvcm0tZmllbGQtb3V0bGluZSB7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG59ICovXHJcbiJdfQ== */\"]\n});","map":{"version":3,"sources":["C:\\Users\\user\\OneDrive\\מסמכים\\fullstack\\ANGULAR\\SECONDRESTORE\\Front\\src\\app\\components\\order-area\\order-submit\\order-submit.component.ts","C:\\Users\\user\\OneDrive\\מסמכים\\fullstack\\ANGULAR\\SECONDRESTORE\\Front\\src\\app\\components\\order-area\\order-submit\\order-submit.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, NgModule, OnDestroy, OnInit } from '@angular/core';\nimport OrderModel from 'src/app/models/order.model';\nimport { MatInputModule } from \"@angular/material/input\";\nimport UserModel from 'src/app/models/user.model';\nimport { Unsubscribe } from 'redux';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { OrderService } from 'src/app/services/order.service';\nimport { NotifyService } from 'src/app/services/notify.service';\nimport store from 'src/app/redux/store';\nimport { AbstractControl, FormControl, FormGroup, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\nimport { OrderSuccessDialogComponent } from '../order-success-dialog/order-success-dialog.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport CityModel from 'src/app/models/city.model';\nimport { CityService } from 'src/app/services/city.service';\nimport ItemModel from 'src/app/models/item.model';\nimport { CartsService } from 'src/app/services/carts.service';\nimport CartModel from 'src/app/models/cart.model';\nimport { ItemService } from 'src/app/services/item.service';\n// import { DatePipe } from '@angular/common';\n// import {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\n// import { OrderBoxComponent } from '../order-box/order-box.component';\n\n\n// export interface DialogData {\n//   sure: string;\n// }\n\n\n\n@Component({\n  selector: 'app-order-submit',\n  templateUrl: './order-submit.component.html',\n  styleUrls: ['./order-submit.component.css']\n})\n\nexport class OrderSubmitComponent implements OnInit, OnDestroy {\n\n  public order = new OrderModel();\n  public user: UserModel;\n  public cart: CartModel[];\n  private unsubscribeMe: Unsubscribe;\n  private items: ItemModel[];\n  private totalCart: number;\n  public today: Date = new Date();\n\n  \n  private bookedDates: Array<{Delivery: Date, count: number}>;\n  private myBookedDates: Date[] = [];\n  // public orders: OrderModel[];\n  // totalCart: number;\n\n  // FormGroup is an object representing the <form> element: \n  public orderForm: FormGroup;\n\n  // FormControl is an object representing an <input>/<select>/<textarea> element:\n  public cityControl: FormControl;\n  public streetControl: FormControl;\n  public deliveryControl: FormControl;\n  public creditControl: FormControl;\n  public sure: Boolean;\n  public cities: CityModel[];\n\n\n    constructor(\n      // public dialog: MatDialog,\n      private myActivatedRoute: ActivatedRoute, \n      private myItemService: ItemService,\n      private myCartService: CartsService,\n      private myOrdersService: OrderService, \n      private myCityService: CityService,\n      private notify: NotifyService, \n      private myRouter: Router,\n      public dialog : MatDialog\n      ) {  \n        // this.cityControl = new FormControl(null, [Validators.required, Validators.pattern(\"^[A-Z].*$\")]);\n        this.cityControl = new FormControl(null, [Validators.required]);\n        this.streetControl = new FormControl(null, Validators.required);\n        this.deliveryControl = new FormControl(null, [Validators.required]);\n        // matches Visa, MasterCard, American Express, Diners Club, Discover, and JCB cards:\n        // there is one more updated here? https://regex101.com/r/37S1iV/1\n        this.creditControl = new FormControl(null, [Validators.required, Validators.pattern(\"^(?:4[0-9]{12}(?:[0-9]{3})?|[25][1-7][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$\")]);\n        this.orderForm = new FormGroup({\n            cityControl: this.cityControl,\n            streetControl: this.streetControl,\n            deliveryControl: this.deliveryControl,\n            creditControl: this.creditControl\n          });\n        }\n\n        async ngOnInit() {\n          this.unsubscribeMe = store.subscribe(() => {\n              this.user = store.getState().authState.user;\n          });\n\n          // shai says this way the loggin in user will be shown automatically\n          if (JSON.parse(localStorage.getItem('user'))) {\n              this.user = store.getState().authState.user;\n          }\n\n          // this.current = new Date();\n          const uuid = this.user.UserUUID;\n          try {\n            this.cart = await this.myCartService.getLastCartByUser(uuid);   \n          } catch (err) {\n              this.notify.error(err);\n          }\n\n          try {\n                this.cities = await this.myCityService.getAllCities();\n          }  catch (err) {\n                this.notify.error(err);\n          }\n\n          try {\n            this.items = await this.myItemService.getOpenCartItems(this.cart[0].CartID);     \n          } catch (err) {\n              this.notify.error(err);\n          }\n\n          try {\n            this.bookedDates = await this.myOrdersService.getFullyBookedDates()\n          }  catch (err) {\n                this.notify.error(err);\n          }\n\n          for (let date of this.bookedDates) {\n            const dateObj = new Date(date.Delivery)\n            this.myBookedDates.push(dateObj);\n          }\n  }\n\n  ngOnDestroy(): void {\n      this.unsubscribeMe();\n  }\n\n  dblstreet() {\n    this.streetControl.setValue(this.user.street);\n  }\n\n  public async submit() {\n    const answer = confirm(\"Are you sure you want to ship your order?\");\n      if (!answer) return;\n    // because onInit is only doing it onde with no REFRESH\n    // try {\n    //     this.orders = await this.myOrdersService.getAllOrdersByOrderIdDesc();\n    //   }\n    // catch (err) {\n    //     this.notify.error(err);\n    //  }\n      try {\n        this.order.UserUUID = this.user.uuid;\n        this.order.CartID = this.cart[0].CartID;\n        this.order.TotalPrice = this.myItemService.totalCartPerUser(this.items);\n        this.order.Date = new Date().toString();\n        // console.log(this.datepipe.transform(this.order.date, 'yyyy-mm--dd'));\n        this.order.City = this.cityControl.value;\n        this.order.Street = this.streetControl.value;\n        this.order.Delivery = this.deliveryControl.value.toDateString();\n        this.order.CreditCard = this.creditControl.value.slice(-4);\n        // this.order.ProductName = cart.ProductName;\n        await this.myOrdersService.addOrder(this.order);    //// MUST SEPERATE IT INTO DIFFERENT FUNCTION LIKE IN PRODUCT-CARD-COMPONENT\n        // this.notify.success(\"Order has been added.\");\n        // this.myRouter.navigateByUrl(\"/products\");\n      }\n      catch(err) {\n          this.notify.error(err);\n          // OPEN ANOTHER DIALOG BOX???\n      }\n    \n    this.openDialog()\n  }\n\n  openDialog() {\n    const dialogRef = this.dialog.open(OrderSuccessDialogComponent,  {\n      // data: {lastOrderID: this.orders[0].OrderID}\n  });\n  dialogRef.afterClosed().subscribe(async result => {\n      console.log('The dialog was closed');\n      // this.quantity = result;\n  });\n  }\n\n  // blocks dates with 3 deliveries from datepicker\n  myFilter = (d: Date): boolean => {\n  return !this.myBookedDates.find(x=>x.getTime()==d.getTime());\n  }\n  \n\n}\n","<a routerLink=\"/products\" routerLinkActive=\"active\">Back to shop</a>\n\n<h3>\n    ORDER\n</h3>\n<div>\n\n    <form (submit)=\"submit()\" [formGroup]=\"orderForm\">\n\n    <h4>Shipping details</h4>\n\n        <mat-form-field appearance=\"outline\">\n            <mat-label>City: </mat-label>\n            <mat-select matInput [formControl]=\"cityControl\" required>\n                <mat-option *ngFor=\"let c of cities\" [value]=\"c.city\">{{c.city}}</mat-option>\n            </mat-select>\n            <mat-error *ngIf=\"cityControl.errors?.required\">Missing city</mat-error>\n        </mat-form-field>\n        \n        <mat-form-field appearance=\"outline\">\n            <mat-label>Street: </mat-label>\n            <input matInput type=\"text\" [formControl]=\"streetControl\" required (dblclick)=\"dblstreet()\">\n            <mat-error *ngIf=\"streetControl.errors?.required\">Missing street</mat-error>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\">\n            <mat-label>Shipping date: </mat-label>\n            <input matInput [matDatepicker]=\"picker\" [matDatepickerFilter]=\"myFilter\" [min]=\"today\" [formControl]=\"deliveryControl\" required>\n             <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n            <mat-datepicker #picker></mat-datepicker>\n            <mat-error *ngIf=\"deliveryControl.errors?.required\">Missing shipping date</mat-error>\n        </mat-form-field>\n\n        <h4>Payments:</h4>\n        <hr/>\n        <mat-form-field appearance=\"outline\">\n            <mat-label>Credit card: </mat-label>\n            <input matInput type=\"text\" [formControl]=\"creditControl\" required>\n            <mat-error *ngIf=\"creditControl.errors?.required\">Missing credit card</mat-error>\n            <mat-error *ngIf=\"creditControl.errors?.pattern && creditControl.touched\">Missing correct credit card deails</mat-error>\n        </mat-form-field>\n\n        <button [disabled]=\"orderForm.invalid\" mat-stroked-button>\n            <mat-icon>send</mat-icon>\n            Order\n        </button>\n\n\n    </form>\n\n</div>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}