{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/user/OneDrive/\\u05DE\\u05E1\\u05DE\\u05DB\\u05D9\\u05DD/fullstack/ANGULAR/SECONDRESTORE/Front/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport ProductModel from 'src/app/models/product.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./../../../services/products.service\";\nimport * as i3 from \"src/app/services/category.service\";\nimport * as i4 from \"src/app/services/notify.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/input\";\nimport * as i9 from \"@angular/material/select\";\nimport * as i10 from \"@angular/material/core\";\n\nfunction UpdateProductComponent_div_0_mat_error_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Missing name.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UpdateProductComponent_div_0_mat_error_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Name must start with a capital letter.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UpdateProductComponent_div_0_mat_error_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Missing price.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UpdateProductComponent_div_0_mat_option_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const c_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", c_r6.CategoryID);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(c_r6.CategoryName);\n  }\n}\n\nfunction UpdateProductComponent_div_0_mat_error_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Must select a category.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UpdateProductComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"form\", 1);\n    i0.ɵɵlistener(\"submit\", function UpdateProductComponent_div_0_Template_form_submit_1_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.update();\n    });\n    i0.ɵɵelementStart(2, \"h3\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"br\");\n    i0.ɵɵelementStart(5, \"mat-form-field\", 2);\n    i0.ɵɵelementStart(6, \"mat-label\");\n    i0.ɵɵtext(7, \"Name: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"input\", 3);\n    i0.ɵɵtemplate(9, UpdateProductComponent_div_0_mat_error_9_Template, 2, 0, \"mat-error\", 0);\n    i0.ɵɵtemplate(10, UpdateProductComponent_div_0_mat_error_10_Template, 2, 0, \"mat-error\", 0);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"mat-form-field\", 2);\n    i0.ɵɵelementStart(12, \"mat-label\");\n    i0.ɵɵtext(13, \"Price: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(14, \"input\", 4);\n    i0.ɵɵtemplate(15, UpdateProductComponent_div_0_mat_error_15_Template, 2, 0, \"mat-error\", 0);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"mat-form-field\", 2);\n    i0.ɵɵelementStart(17, \"mat-label\");\n    i0.ɵɵtext(18, \"Category: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"mat-select\", 5);\n    i0.ɵɵtemplate(20, UpdateProductComponent_div_0_mat_option_20_Template, 2, 2, \"mat-option\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(21, UpdateProductComponent_div_0_mat_error_21_Template, 2, 0, \"mat-error\", 0);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"mat-form-field\");\n    i0.ɵɵelementStart(23, \"mat-label\");\n    i0.ɵɵtext(24, \"Image: *\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(25, \"input\", 7);\n    i0.ɵɵelementStart(26, \"input\", 8);\n    i0.ɵɵlistener(\"change\", function UpdateProductComponent_div_0_Template_input_change_26_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.saveImage($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"button\", 9);\n    i0.ɵɵtext(28, \"Update\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.productForm);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.product.ProductName);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"formControl\", ctx_r0.nameControl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.nameControl.errors == null ? null : ctx_r0.nameControl.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r0.nameControl.errors == null ? null : ctx_r0.nameControl.errors.pattern) && ctx_r0.nameControl.touched);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formControl\", ctx_r0.priceControl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.priceControl.invalid);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formControl\", ctx_r0.categoryControl)(\"value\", ctx_r0.product.CategoryID);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.categories);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.categoryControl.errors == null ? null : ctx_r0.categoryControl.errors.required);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formControl\", ctx_r0.imageControl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.productForm.invalid);\n  }\n} // For working with Reactive Forms we need ReactiveFormsModule\n\n\nexport class UpdateProductComponent {\n  constructor(myActivatedRoute, myProductsService, myCategoryService, notify, myRouter) {\n    this.myActivatedRoute = myActivatedRoute;\n    this.myProductsService = myProductsService;\n    this.myCategoryService = myCategoryService;\n    this.notify = notify;\n    this.myRouter = myRouter;\n    this.product = new ProductModel();\n    this.nameControl = new FormControl(null, [Validators.required, Validators.pattern(\"^[A-Z].*$\")]);\n    this.priceControl = new FormControl(null, Validators.required);\n    this.categoryControl = new FormControl(null, Validators.required);\n    this.imageControl = new FormControl();\n    this.productForm = new FormGroup({\n      nameControl: this.nameControl,\n      priceControl: this.priceControl,\n      categoryControl: this.categoryControl,\n      imageControl: this.imageControl\n    });\n    this.subscription = this.myProductsService.getCartObservable().subscribe(product => {\n      if (product.product.ProductID > 0) {\n        console.log(product); // UPDATE FORM\n\n        this.nameControl.setValue(product.product.ProductName);\n        this.priceControl.setValue(product.product.UnitPrice);\n        this.product.ProductID = product.product.ProductID;\n        this.product.CategoryID = product.product.CategoryID;\n        this.product.ProductName = product.product.ProductName;\n        this.updateRequest = true;\n      } else {\n        this.updateRequest = false;\n      }\n    });\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        _this.categories = yield _this.myCategoryService.getAllCategories();\n      } catch (err) {\n        _this.notify.error(err);\n      }\n    })();\n  }\n\n  saveImage(args) {\n    this.product.image = args.target.files;\n  }\n\n  update() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        _this2.product.ProductName = _this2.nameControl.value;\n        _this2.product.UnitPrice = _this2.priceControl.value;\n        _this2.product.CategoryID = _this2.categoryControl.value;\n        yield _this2.myProductsService.updateProduct(_this2.product);\n\n        _this2.notify.success(\"Product has been updated.\"); // this.myRouter.navigateByUrl(\"/products\");\n\n      } catch (err) {\n        _this2.notify.error(err);\n      }\n    })();\n  }\n\n}\n\nUpdateProductComponent.ɵfac = function UpdateProductComponent_Factory(t) {\n  return new (t || UpdateProductComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.ProductsService), i0.ɵɵdirectiveInject(i3.CategoryService), i0.ɵɵdirectiveInject(i4.NotifyService), i0.ɵɵdirectiveInject(i1.Router));\n};\n\nUpdateProductComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UpdateProductComponent,\n  selectors: [[\"app-update-product\"]],\n  decls: 1,\n  vars: 1,\n  consts: [[4, \"ngIf\"], [3, \"formGroup\", \"submit\"], [\"appearance\", \"outline\"], [\"matInput\", \"\", \"type\", \"text\", \"required\", \"\", 3, \"formControl\"], [\"matInput\", \"\", \"type\", \"number\", \"required\", \"\", 3, \"formControl\"], [\"matInput\", \"\", \"required\", \"\", 3, \"formControl\", \"value\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"matInput\", \"\", 3, \"formControl\"], [\"type\", \"file\", \"accept\", \"image/jpeg\", \"required\", \"\", 3, \"change\"], [3, \"disabled\"], [3, \"value\"]],\n  template: function UpdateProductComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, UpdateProductComponent_div_0_Template, 29, 13, \"div\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.updateRequest);\n    }\n  },\n  directives: [i5.NgIf, i6.ɵNgNoValidate, i6.NgControlStatusGroup, i6.FormGroupDirective, i7.MatFormField, i7.MatLabel, i8.MatInput, i6.DefaultValueAccessor, i6.RequiredValidator, i6.NgControlStatus, i6.FormControlDirective, i6.NumberValueAccessor, i9.MatSelect, i5.NgForOf, i7.MatError, i10.MatOption],\n  styles: [\"form[_ngcontent-%COMP%] {\\r\\n    width: 300px;\\r\\n    margin: auto;\\r\\n    text-align: left;\\r\\n}\\r\\n\\r\\ninput[_ngcontent-%COMP%], button[_ngcontent-%COMP%], label[_ngcontent-%COMP%] {\\r\\n\\twidth: 100%;\\r\\n    box-sizing: border-box;\\r\\n    font-size: x-large;\\r\\n    margin-bottom: 30px;\\r\\n}\\r\\n\\r\\nspan[_ngcontent-%COMP%] {\\r\\n    position: absolute;\\r\\n    margin: 0 20px;\\r\\n    color: red;\\r\\n    font-size: x-large;\\r\\n}\\r\\n\\r\\nmat-form-field[_ngcontent-%COMP%] {\\r\\n    width: 300px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVwZGF0ZS1wcm9kdWN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0lBQ1osWUFBWTtJQUNaLGdCQUFnQjtBQUNwQjs7QUFFQTtDQUNDLFdBQVc7SUFDUixzQkFBc0I7SUFDdEIsa0JBQWtCO0lBQ2xCLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixjQUFjO0lBQ2QsVUFBVTtJQUNWLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLFlBQVk7QUFDaEIiLCJmaWxlIjoidXBkYXRlLXByb2R1Y3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImZvcm0ge1xyXG4gICAgd2lkdGg6IDMwMHB4O1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcclxufVxyXG5cclxuaW5wdXQsIGJ1dHRvbiwgbGFiZWwge1xyXG5cdHdpZHRoOiAxMDAlO1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICAgIGZvbnQtc2l6ZTogeC1sYXJnZTtcclxuICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XHJcbn1cclxuXHJcbnNwYW4ge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgbWFyZ2luOiAwIDIwcHg7XHJcbiAgICBjb2xvcjogcmVkO1xyXG4gICAgZm9udC1zaXplOiB4LWxhcmdlO1xyXG59XHJcblxyXG5tYXQtZm9ybS1maWVsZCB7XHJcbiAgICB3aWR0aDogMzAwcHg7XHJcbn0iXX0= */\"]\n});","map":{"version":3,"sources":["C:\\Users\\user\\OneDrive\\מסמכים\\fullstack\\ANGULAR\\SECONDRESTORE\\Front\\src\\app\\components\\products-area\\update-product\\update-product.component.ts","C:\\Users\\user\\OneDrive\\מסמכים\\fullstack\\ANGULAR\\SECONDRESTORE\\Front\\src\\app\\components\\products-area\\update-product\\update-product.component.html"],"names":[],"mappings":"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","sourcesContent":["import { ProductsService } from './../../../services/products.service';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport ProductModel from 'src/app/models/product.model';\nimport { NotifyService } from 'src/app/services/notify.service';\nimport { environment } from 'src/environments/environment';\nimport { Subscription } from 'rxjs';\nimport CategoryModel from 'src/app/models/category.model';\nimport { CategoryService } from 'src/app/services/category.service';\n\n// For working with Reactive Forms we need ReactiveFormsModule\n\n@Component({\n    selector: 'app-update-product',\n    templateUrl: './update-product.component.html',\n    styleUrls: ['./update-product.component.css']\n})\nexport class UpdateProductComponent {\n\n    public product = new ProductModel();\n    private subscription: Subscription;\n    public categories: CategoryModel[];\n    public updateRequest: boolean;\n\n\n    // FormGroup is an object representing the <form> element: \n    public productForm: FormGroup;\n\n    // FormControl is an object representing an <input>/<select>/<textarea> element:\n    public nameControl: FormControl;\n    public priceControl: FormControl;\n    public imageControl: FormControl;\n    public categoryControl: FormControl;\n\n    constructor(\n        private myActivatedRoute: ActivatedRoute,\n        private myProductsService: ProductsService,\n        private myCategoryService: CategoryService,\n        private notify: NotifyService,\n        private myRouter: Router) {\n\n        this.nameControl = new FormControl(null, [Validators.required, Validators.pattern(\"^[A-Z].*$\")]);\n        this.priceControl = new FormControl(null, Validators.required);\n        this.categoryControl = new FormControl(null, Validators.required);\n        this.imageControl = new FormControl();\n        this.productForm = new FormGroup({\n            nameControl: this.nameControl,\n            priceControl: this.priceControl,\n            categoryControl: this.categoryControl,\n            imageControl: this.imageControl\n        });\n\n        \n        this.subscription = this.myProductsService.getCartObservable().subscribe(product => {\n            if (product.product.ProductID>0) {\n                console.log(product);\n                // UPDATE FORM\n                this.nameControl.setValue(product.product.ProductName);\n                this.priceControl.setValue(product.product.UnitPrice);\n                this.product.ProductID = product.product.ProductID;\n                this.product.CategoryID = product.product.CategoryID;\n                this.product.ProductName = product.product.ProductName;\n                this.updateRequest = true;\n            } else {\n               this.updateRequest = false;\n            }\n        });\n    }\n\n    async ngOnInit() {\n        try {\n            this.categories = await this.myCategoryService.getAllCategories();\n        }\n        catch (err) {\n            this.notify.error(err);\n        }\n    }\n\n    public saveImage(args: Event): void {\n        this.product.image = (args.target as HTMLInputElement).files;\n    }\n\n    public async update() {\n        try {\n            this.product.ProductName = this.nameControl.value;\n            this.product.UnitPrice = this.priceControl.value;\n            this.product.CategoryID = this.categoryControl.value;\n            await this.myProductsService.updateProduct(this.product);\n            this.notify.success(\"Product has been updated.\");\n            // this.myRouter.navigateByUrl(\"/products\");\n        }\n        catch(err) {\n            this.notify.error(err);\n        }\n    }\n\n}\n","<div *ngIf=\"updateRequest\">\n\n    <form (submit)=\"update()\" [formGroup]=\"productForm\">\n\n        <h3>{{product.ProductName}}</h3>\n        <br/>\n\n        <mat-form-field appearance=\"outline\">\n            <mat-label>Name: </mat-label>\n            <input matInput type=\"text\" [formControl]=\"nameControl\" required>\n            <mat-error *ngIf=\"nameControl.errors?.required\">Missing name.</mat-error>\n            <mat-error *ngIf=\"nameControl.errors?.pattern && nameControl.touched\">Name must start with a capital letter.</mat-error>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\">\n            <mat-label>Price: </mat-label>\n            <input matInput type=\"number\" [formControl]=\"priceControl\" required>\n            <mat-error *ngIf=\"priceControl.invalid\">Missing price.</mat-error>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\">\n            <mat-label>Category: </mat-label>\n            <mat-select matInput [formControl]=\"categoryControl\" [value]=\"product.CategoryID\" required>\n                <mat-option *ngFor=\"let c of categories\" [value]=\"c.CategoryID\">{{c.CategoryName}}</mat-option>\n            </mat-select>\n            <mat-error *ngIf=\"categoryControl.errors?.required\">Must select a category.</mat-error>\n        </mat-form-field>\n\n          <mat-form-field>\n                <mat-label>Image: *</mat-label>\n                <input matInput [formControl]=\"imageControl\"/>\n                <input type=\"file\" (change)=\"saveImage($event)\"\n                accept=\"image/jpeg\" required/>\n        </mat-form-field>\n\n        <!-- <label>Image: </label> -->\n        <!-- <input type=\"file\" [formControl]=\"imageControl\" (change)=\"saveImage($event)\"> -->\n\n        <button [disabled]=\"productForm.invalid\">Update</button>\n\n    </form>\n\n</div>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}