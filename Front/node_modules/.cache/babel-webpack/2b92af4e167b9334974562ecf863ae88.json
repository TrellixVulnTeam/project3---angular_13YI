{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/user/OneDrive/\\u05DE\\u05E1\\u05DE\\u05DB\\u05D9\\u05DD/fullstack/ANGULAR/SECONDRESTORE/Front/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { UserModel } from 'src/app/models/user.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/auth.service\";\nimport * as i2 from \"src/app/services/users.service\";\nimport * as i3 from \"src/app/services/city.service\";\nimport * as i4 from \"src/app/services/notify.service\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/forms\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/input\";\nimport * as i10 from \"@angular/material/button\";\nimport * as i11 from \"@angular/material/icon\";\nimport * as i12 from \"@angular/material/select\";\nimport * as i13 from \"@angular/material/core\";\n\nfunction RegisterComponent_h2_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h2\");\n    i0.ɵɵtext(1, \"Register - step 1\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_h2_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h2\");\n    i0.ɵɵtext(1, \"Register - step 2\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_mat_error_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Missing ID.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_mat_error_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"ID must contain 9 numbers.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_mat_error_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Missing email.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_mat_error_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Not valid emial address.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_mat_error_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Missing password.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_mat_error_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"password must be 8 characters long and contain at least one letter and one number.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_mat_error_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Missing confirmation password.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_mat_error_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"passwords must be identical.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_div_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtext(1, \"ID already exsits in our database\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtext(1, \"Email already exsits in our database\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_mat_error_51_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Missing first name.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_mat_error_52_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"First Name must start with a capital letter.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_mat_error_58_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Missing last name.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_mat_error_59_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Last Name must start with a capital letter.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_mat_option_65_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 26);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const c_r27 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", c_r27.city);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(c_r27.city);\n  }\n}\n\nfunction RegisterComponent_mat_error_66_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Must select a city.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_mat_error_72_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Missing street.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport class RegisterComponent {\n  constructor(myAuthService, myUserService, myCityService, notify, myRouter) {\n    this.myAuthService = myAuthService;\n    this.myUserService = myUserService;\n    this.myCityService = myCityService;\n    this.notify = notify;\n    this.myRouter = myRouter;\n    this.user = new UserModel();\n    this.step = false;\n    this.idExists = false;\n    this.emailExists = false;\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        _this.users = yield _this.myUserService.getAllidcardsEmails();\n      } catch (err) {// this.notify.error(err);\n      }\n\n      try {\n        _this.cities = yield _this.myCityService.getAllCities();\n      } catch (err) {// this.notify.error(err);\n      }\n    })();\n  }\n\n  register() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        yield _this2.myAuthService.register(_this2.user); // this.notify.success(\"You are registered :-)\");\n\n        _this2.myRouter.navigateByUrl(\"/home\");\n      } catch (err) {// this.notify.error(err);\n      }\n    })();\n  }\n\n  checkEmail() {\n    this.emailExists = false;\n    this.emailMatch = this.users.findIndex(item => item.email === this.user.email);\n\n    if (this.emailMatch >= 0) {\n      this.emailExists = true;\n    }\n  }\n\n  checkId() {\n    this.idExists = false;\n    this.idMatch = this.users.findIndex(item => item.idcard === this.user.idcard);\n\n    if (this.idMatch >= 0) {\n      this.idExists = true;\n    }\n  }\n\n  continue() {\n    if (this.idMatch < 0 && this.emailMatch < 0) {\n      this.step = true;\n    } else {\n      this.step = false;\n    }\n  }\n\n  back() {\n    this.step = false;\n  }\n\n}\n\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.CityService), i0.ɵɵdirectiveInject(i4.NotifyService), i0.ɵɵdirectiveInject(i5.Router));\n};\n\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 81,\n  vars: 28,\n  consts: [[4, \"ngIf\"], [3, \"submit\"], [\"appearance\", \"outline\"], [\"matInput\", \"\", \"type\", \"text\", \"name\", \"idcard\", \"required\", \"\", \"pattern\", \"^[0-9]\\\\d{8}\", 3, \"ngModel\", \"ngModelChange\", \"keyup\"], [\"idcardBox\", \"ngModel\"], [\"matInput\", \"\", \"type\", \"email\", \"name\", \"email\", \"required\", \"\", \"email\", \"\", 3, \"ngModel\", \"ngModelChange\", \"keyup\"], [\"emailBox\", \"ngModel\"], [\"matInput\", \"\", \"type\", \"password\", \"name\", \"password\", \"required\", \"\", \"pattern\", \"^(?=.*[A-Za-z])(?=.*\\\\d)[A-Za-z\\\\d]{8,}$\", 3, \"ngModel\", \"ngModelChange\"], [\"passwordBox\", \"ngModel\"], [\"matInput\", \"\", \"type\", \"password\", \"name\", \"password2\", \"required\", \"\", 3, \"ngModel\", \"pattern\", \"ngModelChange\"], [\"passwordBox2\", \"ngModel\"], [\"style\", \"color:red\", 4, \"ngIf\"], [\"mat-stroked-button\", \"\", \"type\", \"reset\"], [\"mat-stroked-button\", \"\", \"type\", \"button\", 3, \"click\"], [\"matInput\", \"\", \"type\", \"text\", \"name\", \"firstName\", \"required\", \"\", \"pattern\", \"^[A-Z].*$\", 3, \"ngModel\", \"ngModelChange\"], [\"firstNameBox\", \"ngModel\"], [\"matInput\", \"\", \"type\", \"text\", \"name\", \"lastName\", \"required\", \"\", \"pattern\", \"^[A-Z].*$\", 3, \"ngModel\", \"ngModelChange\"], [\"lastNameBox\", \"ngModel\"], [\"matInput\", \"\", \"name\", \"city\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"cityBox\", \"ngModel\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"matInput\", \"\", \"type\", \"text\", \"name\", \"street\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"streetBox\", \"ngModel\"], [\"mat-stroked-button\", \"\", \"type\", \"button\", 1, \"back\", 3, \"click\"], [\"mat-stroked-button\", \"\"], [2, \"color\", \"red\"], [3, \"value\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r28 = i0.ɵɵgetCurrentView();\n\n      i0.ɵɵelementStart(0, \"div\");\n      i0.ɵɵtemplate(1, RegisterComponent_h2_1_Template, 2, 0, \"h2\", 0);\n      i0.ɵɵtemplate(2, RegisterComponent_h2_2_Template, 2, 0, \"h2\", 0);\n      i0.ɵɵelementStart(3, \"h5\");\n      i0.ɵɵtext(4, \"*all fields are required\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"form\", 1);\n      i0.ɵɵlistener(\"submit\", function RegisterComponent_Template_form_submit_5_listener() {\n        return ctx.register();\n      });\n      i0.ɵɵelementStart(6, \"mat-form-field\", 2);\n      i0.ɵɵelementStart(7, \"mat-label\");\n      i0.ɵɵtext(8, \"ID: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"input\", 3, 4);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.user.idcard = $event;\n      })(\"keyup\", function RegisterComponent_Template_input_keyup_9_listener() {\n        return ctx.checkId();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(11, RegisterComponent_mat_error_11_Template, 2, 0, \"mat-error\", 0);\n      i0.ɵɵtemplate(12, RegisterComponent_mat_error_12_Template, 2, 0, \"mat-error\", 0);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"mat-form-field\", 2);\n      i0.ɵɵelementStart(14, \"mat-label\");\n      i0.ɵɵtext(15, \"Email: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"input\", 5, 6);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_16_listener($event) {\n        return ctx.user.email = $event;\n      })(\"keyup\", function RegisterComponent_Template_input_keyup_16_listener() {\n        return ctx.checkEmail();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(18, RegisterComponent_mat_error_18_Template, 2, 0, \"mat-error\", 0);\n      i0.ɵɵtemplate(19, RegisterComponent_mat_error_19_Template, 2, 0, \"mat-error\", 0);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"mat-form-field\", 2);\n      i0.ɵɵelementStart(21, \"mat-label\");\n      i0.ɵɵtext(22, \"Password: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"input\", 7, 8);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_23_listener($event) {\n        return ctx.user.password = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(25, RegisterComponent_mat_error_25_Template, 2, 0, \"mat-error\", 0);\n      i0.ɵɵtemplate(26, RegisterComponent_mat_error_26_Template, 2, 0, \"mat-error\", 0);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"mat-form-field\", 2);\n      i0.ɵɵelementStart(28, \"mat-label\");\n      i0.ɵɵtext(29, \"Confirm password: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"input\", 9, 10);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_30_listener($event) {\n        return ctx.user.password2 = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(32, RegisterComponent_mat_error_32_Template, 2, 0, \"mat-error\", 0);\n      i0.ɵɵtemplate(33, RegisterComponent_mat_error_33_Template, 2, 0, \"mat-error\", 0);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(34, RegisterComponent_div_34_Template, 2, 0, \"div\", 11);\n      i0.ɵɵtemplate(35, RegisterComponent_div_35_Template, 2, 0, \"div\", 11);\n      i0.ɵɵelement(36, \"br\");\n      i0.ɵɵelementStart(37, \"button\", 12);\n      i0.ɵɵelementStart(38, \"mat-icon\");\n      i0.ɵɵtext(39, \"clear\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(40, \" Reset \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(41, \"button\", 13);\n      i0.ɵɵlistener(\"click\", function RegisterComponent_Template_button_click_41_listener() {\n        i0.ɵɵrestoreView(_r28);\n\n        const _r2 = i0.ɵɵreference(10);\n\n        const _r5 = i0.ɵɵreference(17);\n\n        const _r8 = i0.ɵɵreference(24);\n\n        const _r11 = i0.ɵɵreference(31);\n\n        return _r2.errors || _r5.errors || _r8.errors || _r11.errors || ctx.idExists || ctx.emailExists ? null : ctx.continue();\n      });\n      i0.ɵɵelementStart(42, \"mat-icon\");\n      i0.ɵɵtext(43, \"forward\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(44, \" Step 2 \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(45, \"form\");\n      i0.ɵɵelementStart(46, \"mat-form-field\", 2);\n      i0.ɵɵelementStart(47, \"mat-label\");\n      i0.ɵɵtext(48, \"First Name: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(49, \"input\", 14, 15);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_49_listener($event) {\n        return ctx.user.firstName = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(51, RegisterComponent_mat_error_51_Template, 2, 0, \"mat-error\", 0);\n      i0.ɵɵtemplate(52, RegisterComponent_mat_error_52_Template, 2, 0, \"mat-error\", 0);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(53, \"mat-form-field\", 2);\n      i0.ɵɵelementStart(54, \"mat-label\");\n      i0.ɵɵtext(55, \"Last Name: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(56, \"input\", 16, 17);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_56_listener($event) {\n        return ctx.user.lastName = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(58, RegisterComponent_mat_error_58_Template, 2, 0, \"mat-error\", 0);\n      i0.ɵɵtemplate(59, RegisterComponent_mat_error_59_Template, 2, 0, \"mat-error\", 0);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(60, \"mat-form-field\", 2);\n      i0.ɵɵelementStart(61, \"mat-label\");\n      i0.ɵɵtext(62, \"City: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(63, \"mat-select\", 18, 19);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_mat_select_ngModelChange_63_listener($event) {\n        return ctx.user.city = $event;\n      });\n      i0.ɵɵtemplate(65, RegisterComponent_mat_option_65_Template, 2, 2, \"mat-option\", 20);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(66, RegisterComponent_mat_error_66_Template, 2, 0, \"mat-error\", 0);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(67, \"mat-form-field\", 2);\n      i0.ɵɵelementStart(68, \"mat-label\");\n      i0.ɵɵtext(69, \"Street: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(70, \"input\", 21, 22);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_70_listener($event) {\n        return ctx.user.street = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(72, RegisterComponent_mat_error_72_Template, 2, 0, \"mat-error\", 0);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(73, \"button\", 23);\n      i0.ɵɵlistener(\"click\", function RegisterComponent_Template_button_click_73_listener() {\n        return ctx.back();\n      });\n      i0.ɵɵelementStart(74, \"mat-icon\");\n      i0.ɵɵtext(75, \"redo\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(76, \" Back to step 1 \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(77, \"button\", 24);\n      i0.ɵɵelementStart(78, \"mat-icon\");\n      i0.ɵɵtext(79, \"send\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(80, \" Register \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      const _r2 = i0.ɵɵreference(10);\n\n      const _r5 = i0.ɵɵreference(17);\n\n      const _r8 = i0.ɵɵreference(24);\n\n      const _r11 = i0.ɵɵreference(31);\n\n      const _r16 = i0.ɵɵreference(50);\n\n      const _r19 = i0.ɵɵreference(57);\n\n      const _r22 = i0.ɵɵreference(64);\n\n      const _r25 = i0.ɵɵreference(71);\n\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.step);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.step);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.idcard);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r2.errors == null ? null : _r2.errors.required);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", _r2.errors == null ? null : _r2.errors.pattern);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.email);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r5.errors == null ? null : _r5.errors.required);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", _r5.errors == null ? null : _r5.errors.email);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.password);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r8.errors == null ? null : _r8.errors.required);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", _r8.errors == null ? null : _r8.errors.pattern);\n      i0.ɵɵadvance(4);\n      i0.ɵɵpropertyInterpolate(\"pattern\", _r8.value);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.password2);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r11.errors == null ? null : _r11.errors.required);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", _r11.errors == null ? null : _r11.errors.pattern);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.idExists);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.emailExists);\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.firstName);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r16.errors == null ? null : _r16.errors.required);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", _r16.errors == null ? null : _r16.errors.pattern);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.lastName);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r19.errors == null ? null : _r19.errors.required);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", _r19.errors == null ? null : _r19.errors.pattern);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.city);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.cities);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", _r22.errors == null ? null : _r22.errors.required);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.street);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r25.errors == null ? null : _r25.errors.required);\n    }\n  },\n  directives: [i6.NgIf, i7.ɵNgNoValidate, i7.NgControlStatusGroup, i7.NgForm, i8.MatFormField, i8.MatLabel, i9.MatInput, i7.DefaultValueAccessor, i7.RequiredValidator, i7.PatternValidator, i7.NgControlStatus, i7.NgModel, i7.EmailValidator, i10.MatButton, i11.MatIcon, i12.MatSelect, i6.NgForOf, i8.MatError, i13.MatOption],\n  styles: [\"form[_ngcontent-%COMP%], mat-form-field[_ngcontent-%COMP%]  {\\r\\n    width: 300px;\\r\\n    margin: auto;\\r\\n    text-align: left;\\r\\n}\\r\\n\\r\\ninput[_ngcontent-%COMP%], label[_ngcontent-%COMP%] {\\r\\n\\twidth: 100%;\\r\\n    box-sizing: border-box;\\r\\n    font-size: x-large;\\r\\n    margin-bottom: 20px;\\r\\n}\\r\\n\\r\\nbutton[_ngcontent-%COMP%] {\\r\\n    width: 50%;\\r\\n    box-sizing: border-box;\\r\\n    font-size: x-large;\\r\\n    margin-bottom: 20px;\\r\\n}\\r\\n\\r\\n.back[_ngcontent-%COMP%] {\\r\\n    font-size: medium;\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlZ2lzdGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0lBQ0ksWUFBWTtJQUNaLFlBQVk7SUFDWixnQkFBZ0I7QUFDcEI7O0FBRUE7Q0FDQyxXQUFXO0lBQ1Isc0JBQXNCO0lBQ3RCLGtCQUFrQjtJQUNsQixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxVQUFVO0lBQ1Ysc0JBQXNCO0lBQ3RCLGtCQUFrQjtJQUNsQixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxpQkFBaUI7QUFDckIiLCJmaWxlIjoicmVnaXN0ZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5mb3JtLCBtYXQtZm9ybS1maWVsZCAge1xyXG4gICAgd2lkdGg6IDMwMHB4O1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcclxufVxyXG5cclxuaW5wdXQsIGxhYmVsIHtcclxuXHR3aWR0aDogMTAwJTtcclxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgICBmb250LXNpemU6IHgtbGFyZ2U7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG59XHJcblxyXG5idXR0b24ge1xyXG4gICAgd2lkdGg6IDUwJTtcclxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgICBmb250LXNpemU6IHgtbGFyZ2U7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG59XHJcblxyXG4uYmFjayB7XHJcbiAgICBmb250LXNpemU6IG1lZGl1bTtcclxufVxyXG4iXX0= */\"]\n});","map":{"version":3,"sources":["C:\\Users\\user\\OneDrive\\מסמכים\\fullstack\\ANGULAR\\SECONDRESTORE\\Front\\src\\app\\components\\auth-area\\register\\register.component.ts","C:\\Users\\user\\OneDrive\\מסמכים\\fullstack\\ANGULAR\\SECONDRESTORE\\Front\\src\\app\\components\\auth-area\\register\\register.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport CityModel from 'src/app/models/city.model';\nimport { UserModel } from 'src/app/models/user.model';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { CityService } from 'src/app/services/city.service';\nimport { NotifyService } from 'src/app/services/notify.service';\nimport { UserService } from 'src/app/services/users.service';\n\n@Component({\n    selector: 'app-register',\n    templateUrl: './register.component.html',\n    styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n\n    public user = new UserModel();\n    public step: boolean = false;\n    public idExists: boolean = false;\n    public emailExists: boolean = false;\n    public users: UserModel[];\n    private idMatch: number;\n    private emailMatch: number;\n    public cities: CityModel[];\n\n    constructor(\n        private myAuthService: AuthService,\n        private myUserService: UserService,\n        private myCityService: CityService,\n        private notify: NotifyService,\n        private myRouter: Router) { }\n\n    async ngOnInit() {\n        try {\n            this.users = await this.myUserService.getAllidcardsEmails();\n        } catch (err) {\n            // this.notify.error(err);\n        }\n\n        try {\n            this.cities = await this.myCityService.getAllCities();\n        } catch (err) {\n            // this.notify.error(err);\n        }        \n    }\n\n    public async register() {\n        try {\n            await this.myAuthService.register(this.user);\n            // this.notify.success(\"You are registered :-)\");\n            this.myRouter.navigateByUrl(\"/home\");\n        }\n        catch(err) {\n            // this.notify.error(err);\n        }\n    }\n\n    public checkEmail() {\n        this.emailExists = false;\n        this.emailMatch = this.users.findIndex(item => item.email === this.user.email);\n        if (this.emailMatch>=0) { this.emailExists = true; }\n\n    }\n\n    public checkId() {\n        this.idExists = false;\n        this.idMatch = this.users.findIndex(item => item.idcard === this.user.idcard);\n        if (this.idMatch>=0) { this.idExists = true; }\n\n    }\n\n    public continue() {\n        if (this.idMatch<0 && this.emailMatch<0) { \n            this.step = true; \n        } else {\n            this.step = false;\n        }\n    }\n    \n    back() {\n        this.step = false;\n    }\n}\n","<!-- <div>\n\n    <h2 *ngIf=\"!step\">Register - step 1</h2>\n    <h2 *ngIf=\"step\">Register - step 2</h2>\n    <h5>*all fields are required</h5>\n\n    <form (submit)=\"register()\">\n\n        <section *ngIf=\"!step\">\n\n        <mat-form-field appearance=\"outline\">\n            <mat-label>ID: </mat-label>\n            <input matInput #idcardBox=\"ngModel\" type=\"text\" [(ngModel)]=\"user.idcard\" name=\"idcard\" required pattern=\"^[0-9]\\d{8}\" (keyup)=\"checkId()\">\n            <mat-error *ngIf=\"idcardBox.errors?.required\">Missing ID.</mat-error>\n            <mat-error *ngIf=\"idcardBox.errors?.pattern\">ID must contain 9 numbers.</mat-error>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\">\n            <mat-label>Email: </mat-label>\n            <input matInput #emailBox=\"ngModel\" type=\"email\" [(ngModel)]=\"user.email\" name=\"email\" required email (keyup)=\"checkEmail()\">\n            <mat-error *ngIf=\"emailBox.errors?.required \">Missing email.</mat-error>\n            <mat-error *ngIf=\"emailBox.errors?.email\">Not valid emial address.</mat-error>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\">\n            <mat-label>Password: </mat-label>\n            <input matInput #passwordBox=\"ngModel\" type=\"password\" [(ngModel)]=\"user.password\" name=\"password\" required pattern=\"^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$\">\n            <mat-error *ngIf=\"passwordBox.errors?.required\">Missing password.</mat-error>\n            <mat-error *ngIf=\"passwordBox.errors?.pattern\">password must be 8 characters long and contain at least one letter and one number.</mat-error>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\">\n            <mat-label>Confirm password: </mat-label>\n            <input matInput #passwordBox2=\"ngModel\" type=\"password\" [(ngModel)]=\"user.password2\" name=\"password2\" required pattern=\"{{passwordBox.value}}\">\n            <mat-error *ngIf=\"passwordBox2.errors?.required\">Missing confirmation password.</mat-error>\n            <mat-error *ngIf=\"passwordBox2.errors?.pattern\">passwords must be identical.</mat-error>\n        </mat-form-field>\n\n        <div *ngIf=\"idExists\" style=\"color:red\">ID already exsits in our database</div>\n        <div *ngIf=\"emailExists\" style=\"color:red\">Email already exsits in our database</div>\n\n        <br/>\n\n        <button mat-stroked-button type=\"reset\">\n            <mat-icon>clear</mat-icon>\n            Reset            \n        </button>\n        <button mat-stroked-button type=\"button\" (click)=\"idcardBox.errors || emailBox.errors || passwordBox.errors || passwordBox2.errors || idExists || emailExists ? null: continue();\" > \n            <mat-icon>forward</mat-icon>\n            Step 2\n        </button>\n\n\n        </section>\n\n        <section *ngIf=\"step\">\n            \n            <mat-form-field appearance=\"outline\">\n                <mat-label>First Name: </mat-label>\n                <input matInput #firstNameBox=\"ngModel\" type=\"text\" [(ngModel)]=\"user.firstName\" name=\"firstName\" required pattern=\"^[A-Z].*$\">\n                <mat-error *ngIf=\"firstNameBox.errors?.required\">Missing first name.</mat-error>\n                <mat-error *ngIf=\"firstNameBox.errors?.pattern\">First Name must start with a capital letter.</mat-error>\n            </mat-form-field>    \n\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Last Name: </mat-label>\n                <input matInput #lastNameBox=\"ngModel\" type=\"text\" [(ngModel)]=\"user.lastName\" name=\"lastName\" required pattern=\"^[A-Z].*$\">\n                <mat-error *ngIf=\"lastNameBox.errors?.required\">Missing last name.</mat-error>\n                <mat-error *ngIf=\"lastNameBox.errors?.pattern\">Last Name must start with a capital letter.</mat-error>\n            </mat-form-field>   \n\n            <mat-form-field appearance=\"outline\">\n                <mat-label>City: </mat-label>\n                <mat-select matInput #cityBox=\"ngModel\" [(ngModel)]=\"user.city\" name=\"city\" required>\n                    <mat-option *ngFor=\"let c of cities\" [value]=\"c.city\">{{c.city}}</mat-option>\n                </mat-select>\n                <mat-error *ngIf=\"cityBox.errors?.required\">Must select a city.</mat-error>\n            </mat-form-field>\n\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Street: </mat-label>\n                <input matInput #streetBox=\"ngModel\" type=\"text\" [(ngModel)]=\"user.street\" name=\"street\" required>\n                <mat-error *ngIf=\"streetBox.errors?.required\">Missing street.</mat-error>\n            </mat-form-field>\n\n            <button mat-stroked-button class=\"back\" type=\"button\" (click)=\"back()\" > \n                <mat-icon>redo</mat-icon>\n                Back to step 1\n            </button>\n\n        <button mat-stroked-button> \n            <mat-icon>send</mat-icon>\n            Register\n        </button>\n\n        </section>\n\n    </form>\n\n    \n\n</div> -->\n\n<div>\n\n    <h2 *ngIf=\"!step\">Register - step 1</h2>\n    <h2 *ngIf=\"step\">Register - step 2</h2>\n    <h5>*all fields are required</h5>\n\n    <form (submit)=\"register()\">\n\n        <!-- <section *ngIf=\"!step\"> -->\n\n        <mat-form-field appearance=\"outline\">\n            <mat-label>ID: </mat-label>\n            <input matInput #idcardBox=\"ngModel\" type=\"text\" [(ngModel)]=\"user.idcard\" name=\"idcard\" required pattern=\"^[0-9]\\d{8}\" (keyup)=\"checkId()\">\n            <mat-error *ngIf=\"idcardBox.errors?.required\">Missing ID.</mat-error>\n            <mat-error *ngIf=\"idcardBox.errors?.pattern\">ID must contain 9 numbers.</mat-error>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\">\n            <mat-label>Email: </mat-label>\n            <input matInput #emailBox=\"ngModel\" type=\"email\" [(ngModel)]=\"user.email\" name=\"email\" required email (keyup)=\"checkEmail()\">\n            <mat-error *ngIf=\"emailBox.errors?.required \">Missing email.</mat-error>\n            <mat-error *ngIf=\"emailBox.errors?.email\">Not valid emial address.</mat-error>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\">\n            <mat-label>Password: </mat-label>\n            <input matInput #passwordBox=\"ngModel\" type=\"password\" [(ngModel)]=\"user.password\" name=\"password\" required pattern=\"^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$\">\n            <mat-error *ngIf=\"passwordBox.errors?.required\">Missing password.</mat-error>\n            <mat-error *ngIf=\"passwordBox.errors?.pattern\">password must be 8 characters long and contain at least one letter and one number.</mat-error>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\">\n            <mat-label>Confirm password: </mat-label>\n            <input matInput #passwordBox2=\"ngModel\" type=\"password\" [(ngModel)]=\"user.password2\" name=\"password2\" required pattern=\"{{passwordBox.value}}\">\n            <mat-error *ngIf=\"passwordBox2.errors?.required\">Missing confirmation password.</mat-error>\n            <mat-error *ngIf=\"passwordBox2.errors?.pattern\">passwords must be identical.</mat-error>\n        </mat-form-field>\n\n        <div *ngIf=\"idExists\" style=\"color:red\">ID already exsits in our database</div>\n        <div *ngIf=\"emailExists\" style=\"color:red\">Email already exsits in our database</div>\n\n        <br/>\n\n        <button mat-stroked-button type=\"reset\">\n            <mat-icon>clear</mat-icon>\n            Reset            \n        </button>\n        <button mat-stroked-button type=\"button\" (click)=\"idcardBox.errors || emailBox.errors || passwordBox.errors || passwordBox2.errors || idExists || emailExists ? null: continue();\" > \n            <mat-icon>forward</mat-icon>\n            Step 2\n        </button>\n\n    </form>\n    <form>\n            \n            <mat-form-field appearance=\"outline\">\n                <mat-label>First Name: </mat-label>\n                <input matInput #firstNameBox=\"ngModel\" type=\"text\" [(ngModel)]=\"user.firstName\" name=\"firstName\" required pattern=\"^[A-Z].*$\">\n                <mat-error *ngIf=\"firstNameBox.errors?.required\">Missing first name.</mat-error>\n                <mat-error *ngIf=\"firstNameBox.errors?.pattern\">First Name must start with a capital letter.</mat-error>\n            </mat-form-field>    \n\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Last Name: </mat-label>\n                <input matInput #lastNameBox=\"ngModel\" type=\"text\" [(ngModel)]=\"user.lastName\" name=\"lastName\" required pattern=\"^[A-Z].*$\">\n                <mat-error *ngIf=\"lastNameBox.errors?.required\">Missing last name.</mat-error>\n                <mat-error *ngIf=\"lastNameBox.errors?.pattern\">Last Name must start with a capital letter.</mat-error>\n            </mat-form-field>   \n\n            <mat-form-field appearance=\"outline\">\n                <mat-label>City: </mat-label>\n                <mat-select matInput #cityBox=\"ngModel\" [(ngModel)]=\"user.city\" name=\"city\" required>\n                    <mat-option *ngFor=\"let c of cities\" [value]=\"c.city\">{{c.city}}</mat-option>\n                </mat-select>\n                <mat-error *ngIf=\"cityBox.errors?.required\">Must select a city.</mat-error>\n            </mat-form-field>\n\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Street: </mat-label>\n                <input matInput #streetBox=\"ngModel\" type=\"text\" [(ngModel)]=\"user.street\" name=\"street\" required>\n                <mat-error *ngIf=\"streetBox.errors?.required\">Missing street.</mat-error>\n            </mat-form-field>\n\n            <button mat-stroked-button class=\"back\" type=\"button\" (click)=\"back()\" > \n                <mat-icon>redo</mat-icon>\n                Back to step 1\n            </button>\n\n        <button mat-stroked-button> \n            <mat-icon>send</mat-icon>\n            Register\n        </button>\n\n        <!-- </section> -->\n\n    </form>\n\n    \n\n</div>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}